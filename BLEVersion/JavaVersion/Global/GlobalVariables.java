package com.gravicode.neospectralib.Global;

import android.content.Context;
import android.os.Environment;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import android.widget.Toast;

//import com.gravicode.neospectralib.Activities.HomeActivity;
import com.gravicode.neospectralib.BluetoothSDK.SWS_P3API;
import com.gravicode.neospectralib.BluetoothSDK.SWS_P3BLEDevice;
import com.gravicode.neospectralib.Models.dbReading;


import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Random;

import static com.gravicode.neospectralib.Global.MethodsFactory.logMessage;

/**
 *
 */

public class GlobalVariables {

    public static final String KEY_MODULE_ID = "MODULE_ID";
    public static final String KEY_ERROR_NOT_FOUND = "Not Found";
    public static final String FILE_NAME_RESULTS_old = "neoSpectraResultFile";
    public static final String FILE_NAME_RESULTS = "neoSpectra_resultFile";

    public static final String MILK_NAME = "Milk";

    public static final String INTENT_ACTION = "broadcast.Intent";
    public static final String HOME_INTENT_ACTION = "Home.broadcast.Intent";

    public static final int MEMORY_STATUS_REQUEST = 0;
    public static final int MEMORY_GET_SCANS_REQUEST = 1;
    public static final int MEMORY_CLEAR_REQUEST = 2;
    public static final int MEMORY_SAVE_DEFAULT_PARAM = 3;

    public static final int SYSTEM_BATTERY_REQUEST = 0;
    public static final int SYSTEM_P3_ID_REQUEST = 128;
    public static final int SYSTEM_TEMPERATURE_REQUEST = 129;
    public static final int SYSTEM_BATTERY_INFO = 130;

    /*For filter modules types*/
    public static final int TYPE_FILTER_MODULE = 1;
    public static final int TYPE_FILTER_TIME = 2;

    public static final int MAX_SCANNER_MEMORY = 150;

    /*For filter Headers*/
    public static final String[] FILTER_HEADERS = {"Modules", "Time"};
    public static final String[] FILTER_TIME_MODULE_ITEMS = {"All", "This Week"};

    public static String filterDate;
    public static ArrayList<String> filterModulesName = new ArrayList<>();

    public static Class measurmentsViewCaller;
    public static boolean first_time = true;
    public static int counter = 1;
    public static String selected_email = "None";
    public static int scanTime = 2;
    public static float progressBarPosition;
    public static final String SPECTRUMFILE_Y_AXIS_R_T = "y_Axis:%Reflectance";
    public static final String SPECTRUMFILE_Y_AXIS_A = "y_Axis:Absorbance";

    public static final String SPECTRUM_FILE_X_AXIS_CM = "x_Axis:Wavenumber (cm-1)";
    public static final String SPECTRUM_FILE_X_AXIS_NM = "x_Axis:Wavelength (nm)";

    public static final String SPECTRUM_DEFAULT_PATH_TEMPLATE = "Measurement";
    public static final String SPECTRUM_REFL_PATH_TEMPLATE = "_Perc_";
    public static final String SPECTRUM = ".Spectrum";
    public static final String SPECTRUM_ABS_PATH_TEMPLATE =  "_Abs_";

    public static final String OutputDirectory =  Environment.DIRECTORY_DCIM
            + File.separator + "NeoSpectra";

//ENUMS

    public enum OTA_Functions {
        UPDATE_FIRMWARE(0) {
            public String toString() {
                return "Update Firmware";
            }
        },

        RESET_FIRMWARE(1) {
            public String toString() {
                return "Reset Firmware";
            }
        };

        private final int value;
        private OTA_Functions(int value) {
            this.value = value;
        }

        public int getValue() {
            return value;
        }
    }

    public enum Service {
        P3_SERVICE {
            public String toString() {
                return "P3 Service";
            }
        },

        SYSTEM_STATUS_SERVICE {
            public String toString() {
                return "System Status Service";
            }
        },
        MEMORY_SERVICE {
            public String toString() {
                return "Memory Service";
            }
        },
        BATTERY_SERVICE {
            public String toString() {
                return "Battery Service";
            }
        }
    }

    public enum command {
        Read_RunModule_ID {
            public String toString() {
                return "01: Read Module ID";
            }
        },

        Run_PSD {
            public String toString() {
                return "03: Run PSD";
            }
        },
        Run_Background {
            public String toString() {
                return "04: Run Background";
            }
        },
        Run_Absorbance {
            public String toString() {
                return "05: Run Absorbance";
            }
        },
        Run_GainAdjustment {
            public String toString() {
                return "06: Run Gain Adjustment";
            }
        },
        Burn_Gain {
            public String toString() {
                return "07: Burn Gain";
            }
        },
        Burn_Self {
            public String toString() {
                return "08: Burn Self";
            }
        },
        Burn_WLN {
            public String toString() {
                return "09: Burn WLN";
            }
        },
        Run_SelfCorrection {
            public String toString() {
                return "10: Run Self Correction";
            }
        },
        Run_WavelengthCorrectionBackground {
            public String toString() {
                return "11: Run Wavelength Correction Background";
            }
        },
        Run_WavelengthCorrection {
            public String toString() {
                return "12: Run Wavelength Correction";
            }
        },
        Restore_Defaults {
            public String toString() {
                return "13: Restore Defaults";
            }
        },
        Set_Optical_Settings {
            public String toString() {
                return "27: Set Optical Settings";
            }
        },
        Get_Calibration_Wells {
            public String toString() {
                return "90: Get Calibration Wells";
            }
        },
        Get_Calibration_Wells1 {
            public String toString() {
                return "91: Get Calibration Wells";
            }
        }

    }


    public enum pointsCount {
        disable {
            public String toString() {
                return "0: disable";
            }
        },
        points_65 {
            public String toString() {
                return "1: 65 points";
            }
        },
        points_129 {
            public String toString() {
                return "2: 129 points";
            }
        },
        points_257 {
            public String toString() {
                return "3: 257 points";
            }
        },
        points_513 {
            public String toString() {
                return "4: 513 points";
            }
        },
        points_1024 {
            public String toString() {
                return "5: 1024 points";
            }
        },
        points_2048 {
            public String toString() {
                return "6: 2048 points";
            }
        },
        points_4096 {
            public String toString() {
                return "7: 4096 points";
            }
        }

    }

    public enum opticalGain {
        UseSettingsSavedonDVK {
            public String toString() {
                return "0: Use Settings Saved on DVK";
            }
        },
        UseCalculatedSettings {
            public String toString() {
                return "1: Use Calculated Settings";
            }
        },
        UseExternalSettings {
            public String toString() {
                return "2: Use External Settings";
            }
        }
    }

    public enum apodization {
        Boxcar {
            public String toString() {
                return "0: Boxcar";
            }
        },
        Gaussian {
            public String toString() {
                return "1: Gaussian";
            }
        },
        HappGenzel {
            public String toString() {
                return "2: Happ-Genzel";
            }
        },
        Lorenz {
            public String toString() {
                return "3: Lorenz";
            }
        }
    }

    public enum zeroPadding {
        points_8k {
            public String toString() {
                return "1: 8k points";
            }
        },
        points_16k {
            public String toString() {
                return "2: 16k points";
            }
        },
        points_32k {
            public String toString() {
                return "3: 32k points";
            }
        }
    }

    public enum runMode {
        Single_Mode {
            public String toString() {
                return "0: Single Mode";
            }
        },
        Continuous_Mode {
            public String toString() {
                return "1: Continuous Mode";
            }
        }
    }

    public enum wavelengthCorrection {
        Self_Calibration {
            public String toString() {
                return "SelfCorrection";
            }
        },
        Correction_Using_Reference_Calibrator {
            public String toString() {
                return "ReferenceMaterialCorrection";
            }
        }
    }

    public static String gRunMode = runMode.Single_Mode.toString();
    public static boolean gIsInterpolationEnabled = false;
    public static String gInterpolationPoints = pointsCount.points_129.toString();
    public static boolean gIsFftEnabled = false;
    public static String gApodizationFunction = apodization.Boxcar.toString();
    public static String gFftPoints = zeroPadding.points_8k.toString();
    public static String gOpticalGainSettings;
    public static int gOpticalGainValue;
    public static ArrayList<dbReading> gAllSpectra = new ArrayList<dbReading>();
    public static String gDeviceName = "";
    public static boolean mLastPressed = true;
    public static String gCorrectionMode = wavelengthCorrection.Self_Calibration.toString();


    public enum mainTasks {
        none,
        regression,
        preProcessing,
        featureExtraction,
        scaling;

        public mainTasks getTask(@NonNull int id, Context pContext) {
            mainTasks returnTask;
            switch (id) {
                case 1:
                    returnTask = preProcessing;
                    break;
                case 2:
                    returnTask = featureExtraction;
                    break;
                case 3:
                    returnTask = scaling;
                    break;
                default:
                    returnTask = none;
                    Toast.makeText(pContext, "You didn't chose a valid mainTasks method id", Toast.LENGTH_SHORT).show();
            }
            return returnTask;
        }


        public int getID(@NonNull mainTasks type) {
            int id;
            switch (type) {
                case preProcessing:
                    id = 1;
                    break;
                case featureExtraction:
                    id = 2;
                    break;
                case scaling:
                    id = 3;
                    break;
                default:
                    id = -1;
            }
            return id;
        }
    }


    public enum regression {
        none,
        PCR,
        PLS,
        SVR,
        GPR;

        public regression getMethod(@NonNull int id, Context pContext) {
            regression returnReg;
            switch (id) {
                case 10:
                    returnReg = PCR;
                    break;
                case 20:
                    returnReg = PLS;
                    break;
                case 30:
                    returnReg = SVR;
                    break;
                case 40:
                    returnReg = GPR;
                    break;
                default:
                    returnReg = none;
                    Toast.makeText(pContext, "You didn't chose a valid regression method id", Toast.LENGTH_SHORT).show();
            }
            return returnReg;
        }

        public int getID(@NonNull regression type) {
            int id;
            switch (type) {
                case PCR:
                    id = 10;
                    break;
                case PLS:
                    id = 20;
                    break;
                case SVR:
                    id = 30;
                    break;
                case GPR:
                    id = 40;
                    break;
                default:
                    id = -1;
            }
            return id;
        }

    }

    public enum preProcessing {
        none,
        osc1,
        osc2,
        emsc,
        sfs,
        oplec,
        snv;

        public preProcessing getMethod(@NonNull int id) {
            preProcessing tmpName;
            switch (id) {
                case 101:
                    tmpName = osc1;
                    break;
                case 102:
                    tmpName = osc2;
                    break;
                case 103:
                    tmpName = emsc;
                    break;
                case 104:
                    tmpName = sfs;
                    break;
                case 105:
                    tmpName = oplec;
                    break;
                case 106:
                    tmpName = snv;
                    break;
                default:
                    logMessage("err", "You didn't chose a valid preProcessing method id");
                    tmpName = none;
            }
            return tmpName;
        }

        public int getID(@NonNull preProcessing type) {
            int id;
            switch (type) {
                case osc1:
                    id = 101;
                    break;
                case osc2:
                    id = 102;
                    break;
                case emsc:
                    id = 103;
                    break;
                case sfs:
                    id = 104;
                    break;
                case oplec:
                    id = 105;
                    break;
                case snv:
                    id = 106;
                    break;
                default:
                    id = -1;
            }
            return id;
        }
    }

    public enum featureExtraction {
        none,
        differentiateMultipleLevels,
        integrate,
        integralPlusOriginal,
        covariance,
        differentiate,
        catIntegralDifferentiation,
        multiLevelCovariance,
        differentiateCat,
        detrending1,
        detrending2;

        public featureExtraction getMethod(@NonNull int id) {
            featureExtraction tmpName;
            switch (id) {
                case 201:
                    tmpName = differentiate;
                    break;
                case 202:
                    tmpName = differentiateMultipleLevels;
                    break;
                case 203:
                    tmpName = integrate;
                    break;
                case 204:
                    tmpName = integralPlusOriginal;
                    break;
                case 205:
                    tmpName = covariance;
                    break;
                case 206:
                    tmpName = catIntegralDifferentiation;
                    break;
                case 207:
                    tmpName = differentiateCat;
                    break;
                case 208:
                    tmpName = multiLevelCovariance;
                    break;
                case 209:
                    tmpName = detrending1;
                    break;
                case 210:
                    tmpName = detrending2;
                    break;

                default:
                    logMessage("err", "You didn't chose a valid featureExtraction method id: " + id);
                    tmpName = none;
            }
            return tmpName;
        }

        public int getID(@NonNull featureExtraction type) {
            int id;
            switch (type) {
                case differentiate:
                    id = 201;
                    break;
                case differentiateMultipleLevels:
                    id = 202;
                    break;
                case integrate:
                    id = 203;
                    break;
                case integralPlusOriginal:
                    id = 204;
                    break;
                case covariance:
                    id = 205;
                    break;
                case catIntegralDifferentiation:
                    id = 206;
                    break;
                case differentiateCat:
                    id = 207;
                    break;
                case multiLevelCovariance:
                    id = 208;
                    break;
                case detrending1:
                    id = 209;
                    break;
                case detrending2:
                    id = 210;
                    break;
                default:
                    id = -1;
            }
            return id;
        }
    }

    // TODO: Ensure that the file size doesn't exceed this value.
    public static final int defaultStorageSize = 20;

    @Nullable
    public static SWS_P3BLEDevice currentConnectedDevice;
    public static SWS_P3API bluetoothAPI;
    public static final int OTA_MAX_TRANSMISSION_UNIT = 512;
    public static final int OTA_BT_MAX_TRANSMISSION_UNIT = 989;

    @Nullable
    public static dbReading sensorReading;

    public static boolean isConnecting = false;

    // TODO: 1/3/18 Change this line to get the current module in the future.
    @Nullable


    @NonNull
    public static double[] sampleReadings = new double[]{1.0, 0.00224038, 0.0025984, 0.00293276,
            0.0032202, 0.00344221, 0.00358841, 3.0, 0.00366669, 0.00363281, 0.00358518, 0.00355068,
            0.00354857, 0.00358558, 0.00365455, 0.00373729, 0.00381106, 0.0038565, 0.00386468, 0.00384044,
            0.00380091, 0.00376946, 0.00376736, 0.00380633, 0.00388463, 0.00398814, 0.00409576, 0.00418703,
            0.00424877, 0.00427855, 0.00428409, 0.00427923, 0.00427865, 0.00429334, 0.00432844, 0.00438378,
            0.00445636, 0.00454284, 0.00464087, 0.00474852, 0.00486291, 0.00497913, 0.00509049, 0.00519038,
            0.0052745, 0.0053426, 0.00539842, 0.00544766, 0.00549483, 0.00554061, 0.00558121, 0.00561036,
            0.0056232, 0.00562012, 0.0056082, 0.00559894, 0.00560289, 0.00562376, 0.00565484, 0.00567981,
            0.0056777, 0.00563085, 0.00553271, 0.00539202, 0.00523079, 0.00507638, 0.00495097, 0.00486325,
            0.00480614, 0.00476108, 0.00470667, 0.00462783, 0.00452216, 0.00440055, 0.00428183, 0.00418381,
            0.00411445, 0.00406794, 0.00402728, 0.00397227, 0.00388915, 0.00377729, 0.00364986, 0.00352826,
            0.00343272, 0.00337348, 0.00334633, 0.00333452, 0.00331604, 0.00327287, 0.0031982, 0.00309856,
            0.00299024, 0.00289201, 0.00281747, 0.0027706, 0.00274632, 0.00273507, 0.0027284, 0.00272224,
            0.00271674, 0.00271373, 0.00271366, 0.00271371, 0.00270742, 0.00268651, 0.00264462, 0.00258151,
            0.00250478, 0.00242739, 0.00236212, 0.00231633, 0.0022911, 0.00228493, 0.00229918, 0.00234163,
            0.00242635, 0.00257006, 0.0027859, 0.00307672, 0.00343087, 0.00382347, 0.00422353, 0.00460391,
            0.00494967, 0.00526095, 0.00554914, 0.00582789, 0.00610318, 0.00636703, 0.00659807, 0.00676895,
            0.00685756, 0.00685702, 0.00678017, 0.00665637, 0.00652209, 0.00640908, 0.00633496, 0.00630018,
            0.00629194, 0.00629303, 0.0062911, 0.00628384, 0.00627829, 0.00628527, 0.00631238, 0.00635931,
            0.00641782, 0.00647608, 0.00652513, 0.00656391, 0.0066002, 0.00664624, 0.0067109, 0.00679265,
            0.00687765, 0.00694533, 0.00697841, 0.00697205, 0.00693725, 0.00689706, 0.00687748, 0.00689679,
            0.0069575, 0.00704465, 0.00713185, 0.00719296, 0.00721337, 0.00719555, 0.00715656, 0.00711964,
            0.0071035, 0.00711355, 0.00713857, 0.00715532, 0.00713995, 0.00708047, 0.00698312, 0.00686928,
            0.00676523, 0.00669024, 0.00664859, 0.00662808, 0.00660556, 0.00655772, 0.00647234, 0.00635453,
            0.00622444, 0.00610789, 0.00602436, 0.00597738, 0.00595184, 0.00591991, 0.00585367, 0.0057381,
            0.00557777, 0.00539434, 0.00521724, 0.00507267, 0.00497468, 0.00492036, 0.00489122, 0.00486184,
            0.00481212, 0.00473615, 0.00464278, 0.0045482, 0.00446602, 0.00439992, 0.0043419, 0.00427591,
            0.00418534, 0.00406117, 0.00390707, 0.00373863, 0.00357696, 0.00343986, 0.00333467, 0.00325582,
            0.00318811, 0.00311413, 0.00302234, 0.00291207, 0.00279327, 0.00268144, 0.00259012, 0.0025244,
            0.00247821, 0.00243688, 0.002384, 0.00230932, 0.00221437, 0.00211267, 0.00202384, 0.001964,
            0.00193821, 0.00193986, 0.00195488, 0.00196621, 0.00195822, 0.00192306, 0.00186707, 0.00181076,
            0.00177758, 0.00177759, 0.00180201, 0.00183389, 0.00185924, 0.00186734, 0.00184643, 0.0017862,
            0.00168753, 0.0015701, 0.00146829, 0.00141347, 0.00141532, 0.00146134, 0.00153179, 0.00160961,
            0.00168175, 0.00174034, 0.00178644, 0.00183137, 0.0018921, 0.00198198, 0.00210321, 0.00224616,
            0.00239518, 0.00253662, 0.00266533, 0.00278726, 0.00291757, 0.00307475, 0.00327304, 0.003516,
            0.00379382, 0.00408558, 0.00436539, 0.00461034, 0.00480723, 0.00495576, 0.0050671, 0.00515859,
            0.00524655, 0.00534022, 0.00543913, 0.0055347, 0.00561482, 0.0056695, 0.00569526, 0.00569688,
            0.00568612, 0.00567799, 0.00568633, 0.00572028, 0.00578279, 0.00587099, 0.00597783, 0.00609412,
            0.00621017, 0.00631709, 0.00640768, 0.00647708, 0.00652323, 0.00654736, 0.00655425, 0.00655189,
            0.00655031, 0.00655924, 0.00658501}; //,0.00662772,0.00668032,0.00673049,0.00676474};

    @NonNull
    public static double[] sample0 = sampleReadings;
    @NonNull
    public static double[] sample1 = new double[]{0.00196538, 0.00227534, 0.00255638, 0.00278483, 0.00294979, 0.00305417, 0.00311167, 0.00314166, 0.00316359, 0.00319182, 0.00323221, 0.00328163, 0.00333103, 0.00337059, 0.00339436, 0.00340283, 0.00340276, 0.00340447, 0.00341805, 0.00344992, 0.00350127, 0.00356836, 0.00364427, 0.00372142, 0.00379424, 0.00386106, 0.0039244, 0.00398933, 0.00406086, 0.00414158, 0.00423057, 0.00432363, 0.00441462, 0.00449715, 0.00456612, 0.00461866, 0.00465446, 0.00467552, 0.00468588, 0.00469152, 0.00470022, 0.00472073, 0.0047613, 0.00482782, 0.00492251, 0.00504325, 0.00518302, 0.00532982, 0.00546806, 0.00558184, 0.00565898, 0.00569353, 0.00568624, 0.00564337, 0.00557514, 0.00549382, 0.00541114, 0.00533554, 0.00527072, 0.00521609, 0.00516835, 0.00512254, 0.00507248, 0.00501148, 0.00493398, 0.0048369, 0.00472012, 0.0045863, 0.00444067, 0.00429077, 0.00414518, 0.00401127, 0.00389317, 0.00379129, 0.00370312, 0.00362417, 0.00354903, 0.00347259, 0.00339151, 0.00330471, 0.00321313, 0.00311933, 0.00302762, 0.00294358, 0.002872, 0.00281442, 0.00276854, 0.00273027, 0.00269602, 0.00266326, 0.0026296, 0.00259266, 0.00255125, 0.00250647, 0.00246115, 0.00241802, 0.00237824, 0.00234122, 0.00230535, 0.00226913, 0.00223216, 0.00219561, 0.00216175, 0.00213301, 0.00211106, 0.00209689, 0.00209096, 0.00209261, 0.00209939, 0.00210734, 0.00211257, 0.00211291, 0.00210848, 0.00210146, 0.00209648, 0.00210208, 0.00213209, 0.00220518, 0.00234192, 0.00255998, 0.00286834, 0.00326245, 0.0037219, 0.00421245, 0.00469241, 0.00512175, 0.0054709, 0.00572642, 0.00589184, 0.00598343, 0.00602283, 0.00602952, 0.00601581, 0.00598577, 0.00593814, 0.00587138, 0.00578848, 0.00569888, 0.00561653, 0.00555463, 0.00552045, 0.00551284, 0.0055236, 0.0055417, 0.00555816, 0.00556983, 0.00557993, 0.00559528, 0.00562124, 0.00565766, 0.00569845, 0.00573514, 0.0057623, 0.00578189, 0.00580454, 0.00584636, 0.005922, 0.00603617, 0.0061779, 0.00632141, 0.00643438, 0.00649023, 0.00647888, 0.00641162, 0.00631768, 0.00623361, 0.00618919, 0.00619559, 0.006241, 0.00629592, 0.00632601, 0.00630652, 0.00623272, 0.00612186, 0.00600564, 0.00591643, 0.00587309, 0.00587287, 0.00589268, 0.00589885, 0.0058608, 0.00576331, 0.00561233, 0.00543211, 0.00525469, 0.00510656, 0.00499902, 0.0049264, 0.00487185, 0.0048164, 0.00474698, 0.00466058, 0.0045637, 0.00446759, 0.00438148, 0.00430686, 0.004236, 0.00415597, 0.0040561, 0.00393461, 0.00380069, 0.00367092, 0.00356185, 0.00348227, 0.00342905, 0.00338845, 0.00334223, 0.00327551, 0.00318275, 0.00306908, 0.00294671, 0.00282866, 0.002723, 0.00263045, 0.00254594, 0.00246289, 0.00237806, 0.00229425, 0.0022195, 0.00216255, 0.00212688, 0.00210642, 0.00208585, 0.00204596, 0.00197201, 0.00186118, 0.00172573, 0.00158994, 0.00148178, 0.00142209, 0.00141555, 0.00144853, 0.0014953, 0.00152872, 0.00153025, 0.00149522, 0.00143252, 0.00135947, 0.00129437, 0.00124914, 0.00122461, 0.00121113, 0.00119516, 0.00116746, 0.00112752, 0.00108236, 0.0010425, 0.00101832, 0.00101625, 0.00103344, 0.0010556, 0.00106377, 0.00104595, 0.00100457, 0.000955474, 0.000919597, 0.000913006, 0.000941138, 0.000998318, 0.00107004, 0.00113797, 0.00118722, 0.00121237, 0.0012189, 0.00122033, 0.00123363, 0.00127466, 0.00135332, 0.00146975, 0.0016155, 0.00177969, 0.00195511, 0.00214015, 0.00233678, 0.00254673, 0.00276794, 0.00299273, 0.00320822, 0.00339962, 0.00355513, 0.00366992, 0.00374719, 0.00379618, 0.00382849, 0.0038548, 0.00388281, 0.00391634, 0.00395581, 0.00400003, 0.00404888, 0.00410478, 0.00417158, 0.00425114, 0.00434001, 0.0044288, 0.00450543, 0.00456039, 0.00459156, 0.00460622, 0.004619, 0.00464667, 0.00470149, 0.00478566, 0.00488916, 0.00499235, 0.00507267, 0.00511318, 0.00510927, 0.00507069, 0.00501807, 0.0049751, 0.00495967, 0.00497744, 0.00502036};
    @NonNull
    public static double[] sample2 = new double[]{0.00196165, 0.00233573, 0.00267985, 0.00296303, 0.00316582, 0.00328272, 0.00332094, 0.00329702, 0.00323338, 0.00315508, 0.00308624, 0.0030456, 0.00304299, 0.00307849, 0.00314412, 0.00322662, 0.00331081, 0.00338364, 0.0034384, 0.00347692, 0.00350846, 0.00354567, 0.00359963, 0.0036757, 0.00377151, 0.00387753, 0.0039807, 0.00406958, 0.00413871, 0.00419011, 0.00423148, 0.00427238, 0.00431994, 0.00437582, 0.00443584, 0.00449317, 0.0045433, 0.00458773, 0.00463377, 0.00469082, 0.00476563, 0.00485927, 0.00496631, 0.0050757, 0.0051735, 0.00524768, 0.00529336, 0.00531552, 0.00532715, 0.0053431, 0.0053729, 0.00541636, 0.00546371, 0.00549984, 0.00551032, 0.00548672, 0.0054296, 0.00534812, 0.00525659, 0.00516911, 0.00509451, 0.00503339, 0.0049785, 0.00491821, 0.0048414, 0.00474162, 0.0046189, 0.00447898, 0.00433075, 0.0041836, 0.00404563, 0.00392288, 0.00381898, 0.0037347, 0.00366768, 0.00361236, 0.00356078, 0.00350415, 0.00343512, 0.00335025, 0.00325188, 0.00314843, 0.00305237, 0.00297613, 0.00292727, 0.00290485, 0.00289875, 0.00289252, 0.00286916, 0.00281754, 0.00273713, 0.00263887, 0.00254148, 0.00246458, 0.00242115, 0.00241263, 0.00242844, 0.00244989, 0.00245669, 0.00243378, 0.00237641, 0.00229142, 0.00219443, 0.00210397, 0.0020351, 0.00199504, 0.00198242, 0.00198931, 0.00200474, 0.0020183, 0.00202279, 0.00201542, 0.00199779, 0.00197573, 0.00195963, 0.00196467, 0.00200995, 0.00211567, 0.00229938, 0.00257161, 0.00293117, 0.00336124, 0.00382961, 0.00429457, 0.00471482, 0.00505967, 0.00531591, 0.00548914, 0.00559932, 0.00567233, 0.00573054, 0.00578576, 0.00583691, 0.00587317, 0.00588091, 0.00585138, 0.00578585, 0.00569599, 0.00560002, 0.00551593, 0.00545539, 0.00542067, 0.00540589, 0.00540173, 0.00540136, 0.00540461, 0.00541858, 0.00545406, 0.00551948, 0.00561508, 0.00573011, 0.00584484, 0.00593668, 0.00598827, 0.00599412, 0.0059629, 0.0059146, 0.00587372, 0.00586082, 0.00588561, 0.0059439, 0.00601991, 0.00609337, 0.00614804, 0.00617788, 0.00618803, 0.00619042, 0.00619673, 0.0062118, 0.00623046, 0.00623921, 0.00622178, 0.00616671, 0.00607344, 0.00595428, 0.00583096, 0.00572722, 0.00566003, 0.00563295, 0.0056343, 0.00564131, 0.00562836, 0.00557592, 0.00547673, 0.0053373, 0.0051749, 0.00501156, 0.00486692, 0.0047523, 0.00466839, 0.00460739, 0.00455803, 0.00451024, 0.00445745, 0.00439655, 0.00432682, 0.00424851, 0.00416146, 0.00406437, 0.00395556, 0.00383522, 0.00370724, 0.00357882, 0.00345748, 0.00334743, 0.00324758, 0.00315209, 0.00305316, 0.00294475, 0.00282589, 0.00270213, 0.00258435, 0.00248483, 0.00241233, 0.00236789, 0.00234349, 0.0023242, 0.00229319, 0.00223775, 0.00215385, 0.00204748, 0.00193241, 0.00182514, 0.00173905, 0.00168008, 0.00164572, 0.0016269, 0.00161167, 0.00158931, 0.00155409, 0.00150743, 0.00145687, 0.00141145, 0.00137594, 0.00134843, 0.00132276, 0.00129321, 0.00125759, 0.00121795, 0.00117994, 0.00115146, 0.00114008, 0.00114978, 0.00117841, 0.00121718, 0.00125234, 0.00126905, 0.00125685, 0.00121485, 0.00115349, 0.00109103, 0.0010455, 0.00102713, 0.00103658, 0.00106784, 0.0011107, 0.00115247, 0.00118159, 0.00119239, 0.0011878, 0.00117838, 0.00117827, 0.00119986, 0.00124893, 0.00132234, 0.00140993, 0.00149941, 0.00158152, 0.00165365, 0.00172135, 0.00179753, 0.00189829, 0.00203596, 0.00221268, 0.00241902, 0.00263799, 0.00285116, 0.00304377, 0.0032077, 0.00334244, 0.00345391, 0.00355143, 0.00364406, 0.00373756, 0.00383298, 0.00392711, 0.00401431, 0.00408897, 0.00414781, 0.00419102, 0.004222, 0.00424607, 0.00426901, 0.00429588, 0.00433027, 0.00437381, 0.00442607, 0.00448481, 0.00454667, 0.00460767, 0.00466387, 0.00471204, 0.00475021, 0.0047782, 0.00479783, 0.00481274, 0.0048276, 0.00484702, 0.00487447, 0.00491139, 0.00495653, 0.00500559, 0.0050517, 0.00508696};
    @NonNull
    public static double[] sample3 = new double[]{0.00181514, 0.00213637, 0.00242268, 0.00266229, 0.00285485, 0.00300807, 0.00313153, 0.00323052, 0.00330333, 0.0033437, 0.00334698, 0.00331592, 0.0032629, 0.00320764, 0.00317135, 0.00316991, 0.00320872, 0.00328116, 0.0033717, 0.00346258, 0.00354087, 0.00360268, 0.0036529, 0.00370107, 0.00375572, 0.00381996, 0.00389028, 0.00395861, 0.00401664, 0.00406, 0.00409036, 0.00411459, 0.00414166, 0.00417897, 0.00422992, 0.00429364, 0.00436658, 0.00444475, 0.00452532, 0.00460703, 0.0046894, 0.00477146, 0.00485124, 0.00492616, 0.00499454, 0.00505738, 0.0051186, 0.00518338, 0.00525482, 0.0053309, 0.00540374, 0.00546184, 0.00549438, 0.00549575, 0.00546804, 0.00542036, 0.00536489, 0.00531121, 0.00526166, 0.00521003, 0.00514486, 0.00505555, 0.00493862, 0.00480093, 0.0046584, 0.00453019, 0.0044306, 0.00436174, 0.00431118, 0.00425664, 0.00417637, 0.00405999, 0.00391425, 0.00376048, 0.00362525, 0.00352826, 0.00347364, 0.00344808, 0.00342645, 0.00338236, 0.00329955, 0.00317936, 0.00304078, 0.00291275, 0.0028218, 0.00278028, 0.00278028, 0.00279678, 0.0027989, 0.00276385, 0.00268693, 0.00258279, 0.00247756, 0.00239621, 0.00235189, 0.00234199, 0.0023507, 0.00235556, 0.00233653, 0.00228511, 0.002209, 0.00212911, 0.00206951, 0.00204574, 0.00205855, 0.00209591, 0.00213978, 0.00217294, 0.00218451, 0.00217349, 0.00214848, 0.00212291, 0.00210772, 0.00210639, 0.00211662, 0.00213711, 0.00217382, 0.00224155, 0.00236066, 0.00255081, 0.00282378, 0.00317774, 0.00359574, 0.00404933, 0.00450539, 0.00493302, 0.00530818, 0.0056154, 0.00584722, 0.0060024, 0.00608431, 0.0061002, 0.00606156, 0.00598478, 0.00589033, 0.00579977, 0.00573057, 0.005691, 0.00567782, 0.00567779, 0.00567341, 0.00565036, 0.00560384, 0.00554101, 0.00547848, 0.00543595, 0.0054286, 0.00546115, 0.00552568, 0.00560397, 0.00567407, 0.00571875, 0.00573231, 0.00572227, 0.00570525, 0.00569894, 0.00571491, 0.00575538, 0.00581421, 0.00588001, 0.00593987, 0.00598311, 0.00600484, 0.00600774, 0.00600088, 0.00599577, 0.00600143, 0.00602094, 0.00605053, 0.00608098, 0.00610064, 0.00609884, 0.00606934, 0.00601266, 0.00593648, 0.00585379, 0.00577909, 0.00572351, 0.00569051, 0.00567374, 0.00565815, 0.00562424, 0.00555438, 0.00543916, 0.00528165, 0.00509768, 0.00491146, 0.00474798, 0.00462486, 0.00454696, 0.00450518, 0.00447975, 0.0044472, 0.00438879, 0.00429727, 0.00417898, 0.00405024, 0.00392989, 0.00383166, 0.0037593, 0.00370595, 0.00365702, 0.00359555, 0.00350834, 0.00339081, 0.00324876, 0.00309623, 0.00295054, 0.00282654, 0.00273209, 0.00266616, 0.00261998, 0.0025803, 0.00253373, 0.00247052, 0.00238696, 0.00228588, 0.00217534, 0.00206598, 0.00196781, 0.00188727, 0.00182591, 0.00178075, 0.00174584, 0.00171381, 0.00167764, 0.00163307, 0.00158089, 0.00152734, 0.00148122, 0.00144908, 0.00143169, 0.00142388, 0.00141684, 0.00140103, 0.00136931, 0.00132009, 0.0012589, 0.00119684, 0.00114642, 0.00111718, 0.00111311, 0.00113131, 0.00116192, 0.00119105, 0.00120639, 0.00120238, 0.00118163, 0.00115285, 0.00112716, 0.0011149, 0.00112227, 0.0011475, 0.00117941, 0.00120128, 0.0011984, 0.00116495, 0.00110709, 0.00104171, 0.000991263, 0.000976448, 0.00100898, 0.00108764, 0.00119914, 0.00132319, 0.00143963, 0.0015353, 0.00160832, 0.00166856, 0.00173461, 0.00182738, 0.00196134, 0.00213698, 0.00234021, 0.0025493, 0.00274422, 0.00291296, 0.00305337, 0.00317142, 0.00327723, 0.00337968, 0.00348141, 0.00357724, 0.00365776, 0.00371587, 0.00375175, 0.00377343, 0.00379364, 0.00382535, 0.00387719, 0.00395007, 0.0040364, 0.0041237, 0.00420081, 0.00426301, 0.00431343, 0.00436074, 0.00441462, 0.0044803, 0.00455444, 0.00462561, 0.00468034, 0.00471095, 0.00472001, 0.00471919, 0.00472445, 0.00475055, 0.00480598, 0.00488856, 0.00498409, 0.00507072, 0.00512767, 0.00514336, 0.00511852};
    @NonNull
    public static double[] sample4 = new double[]{0.00180623, 0.00213185, 0.00244339, 0.00271796, 0.00293686, 0.00308902, 0.00317344, 0.00319945, 0.00318452, 0.00315063, 0.00312016, 0.0031116, 0.0031358, 0.00319337, 0.00327439, 0.00336114, 0.00343355, 0.00347594, 0.00348312, 0.00346334, 0.0034366, 0.00342822, 0.00346013, 0.00354273, 0.00367048, 0.00382273, 0.00397022, 0.00408507, 0.00415077, 0.00416772, 0.00415229, 0.00413001, 0.00412603, 0.00415682, 0.00422565, 0.00432323, 0.00443285, 0.00453805, 0.00462926, 0.00470636, 0.00477626, 0.00484734, 0.00492411, 0.00500471, 0.00508232, 0.00514927, 0.00520157, 0.00524161, 0.00527742, 0.00531876, 0.00537169, 0.00543426, 0.00549554, 0.00553881, 0.00554762, 0.00551226, 0.00543394, 0.00532472, 0.00520371, 0.00509064, 0.00499976, 0.00493588, 0.00489388, 0.00486164, 0.00482481, 0.00477153, 0.00469526, 0.00459508, 0.00447433, 0.00433866, 0.00419464, 0.00404924, 0.00390975, 0.00378339, 0.00367604, 0.00359012, 0.00352281, 0.00346592, 0.00340796, 0.00333799, 0.00324996, 0.00314577, 0.00303546, 0.00293405, 0.00285568, 0.00280747, 0.00278582, 0.00277727, 0.00276361, 0.0027292, 0.00266733, 0.00258282, 0.00248993, 0.00240656, 0.00234719, 0.0023175, 0.00231233, 0.0023181, 0.00231857, 0.00230181, 0.00226494, 0.00221441, 0.00216208, 0.00211941, 0.00209269, 0.00208142, 0.00207999, 0.00208127, 0.00208053, 0.00207753, 0.00207573, 0.00207911, 0.00208905, 0.00210339, 0.00211843, 0.00213301, 0.00215259, 0.00219161, 0.00227238, 0.00242007, 0.00265482, 0.002984, 0.00339775, 0.00386922, 0.00435968, 0.00482652, 0.00523196, 0.00554975, 0.00576836, 0.00589032, 0.00592901, 0.00590444, 0.0058394, 0.00575643, 0.00567517, 0.00560988, 0.00556731, 0.00554571, 0.00553595, 0.0055244, 0.00549738, 0.0054459, 0.00536969, 0.00527913, 0.00519409, 0.0051391, 0.00513585, 0.00519519, 0.00531224, 0.00546693, 0.00562967, 0.00576963, 0.00586317, 0.00590022, 0.00588699, 0.00584388, 0.00579887, 0.00577838, 0.00579928, 0.00586466, 0.00596407, 0.0060772, 0.00618014, 0.00625288, 0.00628577, 0.00628214, 0.00625564, 0.00622377, 0.00620081, 0.00619286, 0.00619649, 0.0062004, 0.0061901, 0.00615415, 0.00608912, 0.00600112, 0.00590283, 0.00580788, 0.00572515, 0.00565514, 0.00558996, 0.00551697, 0.00542506, 0.00531072, 0.00518075, 0.00505038, 0.00493769, 0.00485625, 0.00480897, 0.00478566, 0.00476627, 0.00472893, 0.00465896, 0.0045545, 0.00442647, 0.00429357, 0.00417457, 0.00408036, 0.00400856, 0.00394358, 0.00386349, 0.00375073, 0.00360121, 0.00342688, 0.00325122, 0.00309987, 0.00299059, 0.00292647, 0.00289501, 0.00287331, 0.00283743, 0.00277168, 0.00267421, 0.00255666, 0.00243833, 0.0023375, 0.00226362, 0.00221382, 0.0021755, 0.00213307, 0.00207539, 0.00200034, 0.00191501, 0.00183187, 0.00176301, 0.00171467, 0.00168418, 0.00166057, 0.00162908, 0.00157761, 0.00150197, 0.0014076, 0.00130712, 0.00121523, 0.00114325, 0.00109593, 0.00107188, 0.00106655, 0.00107529, 0.00109464, 0.00112217, 0.00115555, 0.00119118, 0.00122294, 0.00124233, 0.0012411, 0.0012153, 0.00116785, 0.00110746, 0.00104513, 0.000990973, 0.000953113, 0.00093621, 0.000938285, 0.00095045, 0.000963086, 0.000973178, 0.000985349, 0.00100599, 0.00103699, 0.00107492, 0.00111389, 0.00114743, 0.00116958, 0.00117823, 0.00117979, 0.00119053, 0.00123057, 0.00131352, 0.0014405, 0.00160268, 0.00178689, 0.00197956, 0.00216961, 0.00235116, 0.00252465, 0.00269532, 0.00286948, 0.00305011, 0.00323393, 0.00341129, 0.00356905, 0.00369538, 0.00378413, 0.00383731, 0.00386459, 0.00388038, 0.0038993, 0.0039316, 0.00398034, 0.0040415, 0.00410712, 0.00416953, 0.0042249, 0.00427498, 0.00432635, 0.00438743, 0.00446408, 0.00455589, 0.00465514, 0.00474903, 0.00482402, 0.00487041, 0.00488585, 0.00487676, 0.00485685, 0.00484287, 0.0048488, 0.00488092, 0.00493578, 0.00500153, 0.00506202, 0.00510219, 0.00511286};
    @NonNull
    public static double[] sample5 = new double[]{0.00180931, 0.00215129, 0.00246273, 0.00271943, 0.00290949, 0.00303468, 0.00310811, 0.00314906, 0.00317678, 0.0032049, 0.00323859, 0.00327527, 0.00330858, 0.00333306, 0.00334731, 0.0033545, 0.003361, 0.00337418, 0.00340015, 0.00344159, 0.00349636, 0.00355796, 0.00361819, 0.00367079, 0.0037143, 0.00375259, 0.00379319, 0.00384396, 0.0039098, 0.00399044, 0.00408031, 0.00417045, 0.0042516, 0.00431746, 0.0043668, 0.00440382, 0.00443632, 0.00447262, 0.00451849, 0.00457552, 0.00464166, 0.00471335, 0.00478827, 0.00486686, 0.00495219, 0.00504792, 0.00515508, 0.00526941, 0.00538065, 0.00547451, 0.00553692, 0.00555903, 0.00554089, 0.0054921, 0.00542882, 0.00536794, 0.00532075, 0.00528881, 0.00526386, 0.00523161, 0.00517811, 0.00509587, 0.00498736, 0.00486409, 0.00474192, 0.00463456, 0.00454824, 0.00447965, 0.00441767, 0.00434817, 0.0042601, 0.00415025, 0.00402422, 0.00389311, 0.00376778, 0.00365362, 0.00354868, 0.00344539, 0.00333475, 0.00321146, 0.00307809, 0.00294595, 0.00283127, 0.00274787, 0.00270044, 0.0026825, 0.00267959, 0.00267491, 0.00265469, 0.00261242, 0.00255088, 0.00248083, 0.00241604, 0.00236675, 0.00233508, 0.00231536, 0.00229855, 0.00227783, 0.00225235, 0.00222782, 0.00221397, 0.00221969, 0.00224759, 0.0022906, 0.00233304, 0.00235611, 0.00234538, 0.00229668, 0.00221815, 0.00212775, 0.00204729, 0.0019956, 0.00198293, 0.00200888, 0.00206498, 0.0021413, 0.00223394, 0.00234942, 0.00250347, 0.00271491, 0.00299734, 0.00335204, 0.00376431, 0.00420466, 0.00463504, 0.00501849, 0.00532882, 0.0055566, 0.00570937, 0.00580624, 0.00586947, 0.00591635, 0.00595439, 0.00598079, 0.0059857, 0.00595797, 0.0058911, 0.00578735, 0.00565845, 0.00552251, 0.00539916, 0.00530443, 0.00524719, 0.0052278, 0.00523932, 0.0052709, 0.00531179, 0.00535432, 0.00539497, 0.00543394, 0.00547406, 0.00551902, 0.0055715, 0.00563168, 0.00569766, 0.00576687, 0.00583736, 0.00590753, 0.00597513, 0.00603678, 0.00608848, 0.00612635, 0.00614714, 0.0061489, 0.00613218, 0.00610095, 0.00606225, 0.00602444, 0.00599523, 0.00597993, 0.00598004, 0.00599189, 0.00600701, 0.00601497, 0.00600725, 0.00597978, 0.00593313, 0.00587097, 0.00579865, 0.00572164, 0.00564398, 0.00556682, 0.00548844, 0.00540604, 0.00531786, 0.00522432, 0.00512815, 0.00503342, 0.00494402, 0.00486139, 0.00478278, 0.00470158, 0.00460987, 0.00450171, 0.00437566, 0.00423588, 0.00409182, 0.00395585, 0.00383914, 0.00374714, 0.00367741, 0.00362049, 0.00356314, 0.00349215, 0.00339873, 0.00328211, 0.00315054, 0.00301821, 0.00289939, 0.00280277, 0.00272885, 0.0026709, 0.0026184, 0.00256144, 0.00249439, 0.00241715, 0.00233416, 0.0022525, 0.00217975, 0.0021207, 0.00207365, 0.00203004, 0.0019798, 0.00191828, 0.00184834, 0.00177664, 0.00170949, 0.00165279, 0.0016128, 0.00159223, 0.00158462, 0.00157596, 0.00155384, 0.00151442, 0.00146133, 0.00139997, 0.00133465, 0.00126976, 0.00121059, 0.0011616, 0.0011254, 0.00110473, 0.00110273, 0.00111904, 0.00114712, 0.00117792, 0.00120468, 0.00122291, 0.00122763, 0.00121402, 0.00118159, 0.00113601, 0.0010857, 0.00103716, 0.00099474, 0.000963289, 0.000947305, 0.000947247, 0.000960793, 0.000989021, 0.00103706, 0.00110573, 0.00118545, 0.00126136, 0.00132304, 0.00136901, 0.00140509, 0.00144139, 0.00149146, 0.00157184, 0.00169775, 0.0018755, 0.00209764, 0.00234517, 0.00259467, 0.00282587, 0.00302691, 0.00319583, 0.00333799, 0.00346086, 0.00356881, 0.00366055, 0.00373081, 0.00377506, 0.00379499, 0.0038014, 0.00381192, 0.00384424, 0.00390821, 0.00400126, 0.00410903, 0.00421057, 0.00428636, 0.00432672, 0.00433752, 0.00433938, 0.00435921, 0.00441719, 0.00451605, 0.00463885, 0.00475648, 0.00484009, 0.00487304, 0.00485768, 0.00481465, 0.0047746, 0.00476551, 0.00480071, 0.00487284, 0.00495685, 0.0050208, 0.0050399, 0.00500745, 0.00493789};
    @NonNull
    public static double[] sample6 = new double[]{0.00231162, 0.00266521, 0.00300132, 0.00329522, 0.00352043, 0.00365579, 0.00369795, 0.00367007, 0.00361639, 0.00358314, 0.00359781, 0.00365988, 0.00374496, 0.00381679, 0.00384372, 0.00381554, 0.00375185, 0.00369491, 0.0036892, 0.00375924, 0.00389776, 0.00406821, 0.00421955, 0.00430801, 0.00431704, 0.00426532, 0.0041981, 0.00416631, 0.00420425, 0.0043161, 0.00447566, 0.00463891, 0.00476436, 0.00483119, 0.00484627, 0.00483711, 0.00483585, 0.0048635, 0.00492174, 0.00499557, 0.00506466, 0.00511748, 0.00515995, 0.00521298, 0.0053, 0.00543139, 0.00559459, 0.005756, 0.0058745, 0.00592055, 0.00589123, 0.00581333, 0.00573231, 0.00569198, 0.00571397, 0.00578629, 0.00586728, 0.00590468, 0.00586088, 0.00573139, 0.00554726, 0.00536052, 0.00522053, 0.00515234, 0.00514655, 0.00516467, 0.00515805, 0.0050917, 0.0049611, 0.00479331, 0.00463241, 0.00451704, 0.00446137, 0.00444844, 0.00443916, 0.00439227, 0.00428566, 0.00412765, 0.0039529, 0.0038053, 0.00371712, 0.00369435, 0.00371425, 0.00373626, 0.00372145, 0.00365084, 0.00353317, 0.00339819, 0.0032798, 0.00319824, 0.00315071, 0.00311478, 0.00306273, 0.00297898, 0.00287111, 0.00276782, 0.00270448, 0.00270368, 0.00276094, 0.00284341, 0.00290261, 0.00289616, 0.00280818, 0.00265829, 0.00249425, 0.00237126, 0.00232745, 0.00236697, 0.00245881, 0.00255201, 0.00259988, 0.00258178, 0.00251257, 0.00243572, 0.00240407, 0.00245779, 0.00261018, 0.00284703, 0.00313861, 0.0034571, 0.00379012, 0.00414325, 0.00453073, 0.00495962, 0.00541664, 0.00586547, 0.00625694, 0.0065477, 0.00671811, 0.00678045, 0.00677338, 0.00674529, 0.00673441, 0.00675441, 0.00679193, 0.00681752, 0.00680414, 0.0067432, 0.00664942, 0.0065521, 0.00647949, 0.00644516, 0.00644267, 0.00645041, 0.00644435, 0.00641333, 0.00636816, 0.00633798, 0.00635461, 0.00643387, 0.00656485, 0.0067124, 0.00683148, 0.00688715, 0.00687199, 0.00681158, 0.00675387, 0.00674667, 0.00681454, 0.00694721, 0.00710445, 0.00723446, 0.00729741, 0.00728346, 0.0072164, 0.00714093, 0.00710001, 0.00711413, 0.00717199, 0.00723661, 0.00726433, 0.00722783, 0.00713153, 0.00701019, 0.00691118, 0.0068708, 0.0068973, 0.00696697, 0.00703389, 0.00705002, 0.00698818, 0.00685592, 0.00669153, 0.00654414, 0.00644975, 0.006416, 0.00642087, 0.00642324, 0.00638199, 0.00627622, 0.00611532, 0.00593259, 0.00576635, 0.00564117, 0.00555873, 0.00549936, 0.00543175, 0.00532886, 0.00518384, 0.00501535, 0.00485744, 0.00474066, 0.00467731, 0.00465695, 0.00465053, 0.00462143, 0.0045419, 0.00440742, 0.00423854, 0.00406838, 0.00392501, 0.00382029, 0.00374815, 0.00368919, 0.00362054, 0.00352887, 0.00341785, 0.00330321, 0.00320065, 0.00311852, 0.00305779, 0.00301101, 0.00296064, 0.00288732, 0.00278696, 0.00267863, 0.00259089, 0.00253793, 0.00251113, 0.00249079, 0.00245748, 0.00239436, 0.00229124, 0.00215445, 0.00201057, 0.00189404, 0.00182705, 0.00181072, 0.00183055, 0.00186282, 0.00188118, 0.00186973, 0.00183356, 0.0017927, 0.00176288, 0.00174465, 0.00173145, 0.00171973, 0.00170727, 0.00169008, 0.0016686, 0.00165315, 0.00165654, 0.0016828, 0.00172729, 0.00178323, 0.00184088, 0.00188619, 0.00191068, 0.00192343, 0.00194563, 0.00198931, 0.00204706, 0.00210549, 0.00215993, 0.0022122, 0.00226472, 0.00232708, 0.00242421, 0.00258414, 0.00281249, 0.00308654, 0.00337356, 0.0036473, 0.00389104, 0.00409714, 0.00426982, 0.00442538, 0.00458302, 0.00475128, 0.00492224, 0.00507724, 0.0051972, 0.0052714, 0.0053033, 0.00531175, 0.00532423, 0.0053644, 0.00544253, 0.00555442, 0.00568508, 0.00581285, 0.00591601, 0.00598268, 0.00601701, 0.00603519, 0.00605465, 0.00608654, 0.00613561, 0.00620158, 0.00627867, 0.00635702, 0.00642824, 0.00648931, 0.00654042, 0.00658097, 0.00661014, 0.00663051, 0.00664787, 0.00666696, 0.00668935, 0.00671506, 0.00674324, 0.00676937};
    @NonNull
    public static double[] sample7 = new double[]{0.00224038, 0.0025984, 0.00293276, 0.0032202, 0.00344221, 0.00358841, 0.00365923, 0.00366669, 0.00363281, 0.00358518, 0.00355068, 0.00354857, 0.00358558, 0.00365455, 0.00373729, 0.00381106, 0.0038565, 0.00386468, 0.00384044, 0.00380091, 0.00376946, 0.00376736, 0.00380633, 0.00388463, 0.00398814, 0.00409576, 0.00418703, 0.00424877, 0.00427855, 0.00428409, 0.00427923, 0.00427865, 0.00429334, 0.00432844, 0.00438378, 0.00445636, 0.00454284, 0.00464087, 0.00474852, 0.00486291, 0.00497913, 0.00509049, 0.00519038, 0.0052745, 0.0053426, 0.00539842, 0.00544766, 0.00549483, 0.00554061, 0.00558121, 0.00561036, 0.0056232, 0.00562012, 0.0056082, 0.00559894, 0.00560289, 0.00562376, 0.00565484, 0.00567981, 0.0056777, 0.00563085, 0.00553271, 0.00539202, 0.00523079, 0.00507638, 0.00495097, 0.00486325, 0.00480614, 0.00476108, 0.00470667, 0.00462783, 0.00452216, 0.00440055, 0.00428183, 0.00418381, 0.00411445, 0.00406794, 0.00402728, 0.00397227, 0.00388915, 0.00377729, 0.00364986, 0.00352826, 0.00343272, 0.00337348, 0.00334633, 0.00333452, 0.00331604, 0.00327287, 0.0031982, 0.00309856, 0.00299024, 0.00289201, 0.00281747, 0.0027706, 0.00274632, 0.00273507, 0.0027284, 0.00272224, 0.00271674, 0.00271373, 0.00271366, 0.00271371, 0.00270742, 0.00268651, 0.00264462, 0.00258151, 0.00250478, 0.00242739, 0.00236212, 0.00231633, 0.0022911, 0.00228493, 0.00229918, 0.00234163, 0.00242635, 0.00257006, 0.0027859, 0.00307672, 0.00343087, 0.00382347, 0.00422353, 0.00460391, 0.00494967, 0.00526095, 0.00554914, 0.00582789, 0.00610318, 0.00636703, 0.00659807, 0.00676895, 0.00685756, 0.00685702, 0.00678017, 0.00665637, 0.00652209, 0.00640908, 0.00633496, 0.00630018, 0.00629194, 0.00629303, 0.0062911, 0.00628384, 0.00627829, 0.00628527, 0.00631238, 0.00635931, 0.00641782, 0.00647608, 0.00652513, 0.00656391, 0.0066002, 0.00664624, 0.0067109, 0.00679265, 0.00687765, 0.00694533, 0.00697841, 0.00697205, 0.00693725, 0.00689706, 0.00687748, 0.00689679, 0.0069575, 0.00704465, 0.00713185, 0.00719296, 0.00721337, 0.00719555, 0.00715656, 0.00711964, 0.0071035, 0.00711355, 0.00713857, 0.00715532, 0.00713995, 0.00708047, 0.00698312, 0.00686928, 0.00676523, 0.00669024, 0.00664859, 0.00662808, 0.00660556, 0.00655772, 0.00647234, 0.00635453, 0.00622444, 0.00610789, 0.00602436, 0.00597738, 0.00595184, 0.00591991, 0.00585367, 0.0057381, 0.00557777, 0.00539434, 0.00521724, 0.00507267, 0.00497468, 0.00492036, 0.00489122, 0.00486184, 0.00481212, 0.00473615, 0.00464278, 0.0045482, 0.00446602, 0.00439992, 0.0043419, 0.00427591, 0.00418534, 0.00406117, 0.00390707, 0.00373863, 0.00357696, 0.00343986, 0.00333467, 0.00325582, 0.00318811, 0.00311413, 0.00302234, 0.00291207, 0.00279327, 0.00268144, 0.00259012, 0.0025244, 0.00247821, 0.00243688, 0.002384, 0.00230932, 0.00221437, 0.00211267, 0.00202384, 0.001964, 0.00193821, 0.00193986, 0.00195488, 0.00196621, 0.00195822, 0.00192306, 0.00186707, 0.00181076, 0.00177758, 0.00177759, 0.00180201, 0.00183389, 0.00185924, 0.00186734, 0.00184643, 0.0017862, 0.00168753, 0.0015701, 0.00146829, 0.00141347, 0.00141532, 0.00146134, 0.00153179, 0.00160961, 0.00168175, 0.00174034, 0.00178644, 0.00183137, 0.0018921, 0.00198198, 0.00210321, 0.00224616, 0.00239518, 0.00253662, 0.00266533, 0.00278726, 0.00291757, 0.00307475, 0.00327304, 0.003516, 0.00379382, 0.00408558, 0.00436539, 0.00461034, 0.00480723, 0.00495576, 0.0050671, 0.00515859, 0.00524655, 0.00534022, 0.00543913, 0.0055347, 0.00561482, 0.0056695, 0.00569526, 0.00569688, 0.00568612, 0.00567799, 0.00568633, 0.00572028, 0.00578279, 0.00587099, 0.00597783, 0.00609412, 0.00621017, 0.00631709, 0.00640768, 0.00647708, 0.00652323, 0.00654736, 0.00655425, 0.00655189, 0.00655031, 0.00655924, 0.00658501, 0.00662772, 0.00668032, 0.00673049, 0.00676474};
    @NonNull
    public static double[] sample8 = new double[]{0.00227543, 0.00263154, 0.00295851, 0.0032391, 0.00346263, 0.00362493, 0.00372776, 0.00377719, 0.00378184, 0.00375265, 0.00370349, 0.00365058, 0.00360977, 0.00359321, 0.00360657, 0.00364737, 0.00370558, 0.00376817, 0.00382546, 0.00387474, 0.00391886, 0.00396273, 0.00401084, 0.00406572, 0.00412609, 0.00418703, 0.00424424, 0.00429887, 0.00435738, 0.00442569, 0.00450389, 0.00458567, 0.0046601, 0.00471322, 0.00473206, 0.00471308, 0.00466976, 0.00463097, 0.00462838, 0.00468132, 0.00478922, 0.0049333, 0.00508397, 0.0052115, 0.00529881, 0.00534974, 0.00538632, 0.0054357, 0.00551504, 0.00562295, 0.00573997, 0.00583612, 0.00588339, 0.00586913, 0.00580313, 0.00571343, 0.00563219, 0.0055797, 0.00555468, 0.00553502, 0.00548896, 0.00539276, 0.00524605, 0.00507583, 0.00492512, 0.0048322, 0.00481185, 0.00484751, 0.00489641, 0.00490577, 0.00483543, 0.0046772, 0.00446032, 0.00423915, 0.00406879, 0.00398086, 0.00397096, 0.00400203, 0.00402156, 0.00398542, 0.00387756, 0.00371583, 0.00354169, 0.0033999, 0.0033187, 0.0032984, 0.00331248, 0.00332152, 0.00329367, 0.00322018, 0.00311732, 0.00301514, 0.00294145, 0.00290948, 0.00291257, 0.00292685, 0.0029231, 0.0028831, 0.00281008, 0.00272599, 0.0026575, 0.00262043, 0.00261187, 0.00261278, 0.00259876, 0.00255427, 0.00248375, 0.00241231, 0.00237395, 0.00239251, 0.00246641, 0.00256651, 0.00264868, 0.00267562, 0.00263812, 0.00256562, 0.00251959, 0.00257109, 0.00277216, 0.00313354, 0.00361845, 0.0041555, 0.0046657, 0.00509143, 0.0054147, 0.00565689, 0.0058613, 0.00606749, 0.00628996, 0.0065112, 0.00669183, 0.00679207, 0.00679337, 0.00670947, 0.00658155, 0.0064602, 0.00638352, 0.00636196, 0.00637745, 0.00639612, 0.00638823, 0.00634482, 0.00628246, 0.00623419, 0.00623133, 0.00628592, 0.00638316, 0.00648798, 0.00656269, 0.0065866, 0.00656725, 0.00653721, 0.00653807, 0.00659939, 0.0067226, 0.00687766, 0.0070154, 0.00709064, 0.00708476, 0.00701564, 0.00692954, 0.00687929, 0.00690029, 0.00699545, 0.00713423, 0.00726585, 0.00734188, 0.00733828, 0.00726571, 0.00716258, 0.00707511, 0.00703489, 0.00704513, 0.00708059, 0.0071008, 0.00707057, 0.00697786, 0.00683939, 0.00669133, 0.00657124, 0.00650143, 0.00648054, 0.00648479, 0.0064785, 0.00643118, 0.00633281, 0.00619794, 0.0060557, 0.00593321, 0.00584368, 0.00578443, 0.00574221, 0.00570088, 0.00564931, 0.00558657, 0.0055208, 0.00546115, 0.00540847, 0.0053516, 0.00527236, 0.00515568, 0.0049992, 0.00481749, 0.00463765, 0.00448795, 0.00438451, 0.00432288, 0.00427893, 0.0042187, 0.00411392, 0.00395654, 0.00376448, 0.00357433, 0.00342425, 0.00333685, 0.00331069, 0.00332137, 0.00333061, 0.00330208, 0.00321858, 0.00309031, 0.00294789, 0.0028241, 0.00273705, 0.00268462, 0.00264885, 0.0026049, 0.00253288, 0.00243004, 0.0023148, 0.00221728, 0.00216115, 0.00215043, 0.00216925, 0.00218999, 0.00218384, 0.00213258, 0.00203759, 0.00192009, 0.00181162, 0.00174079, 0.00172217, 0.00174958, 0.00179822, 0.00183903, 0.001856, 0.00185152, 0.00183651, 0.00181815, 0.00179954, 0.00178615, 0.00178219, 0.00177973, 0.00176086, 0.00171606, 0.00165683, 0.00160675, 0.00158198, 0.00158532, 0.00161622, 0.00167456, 0.001753, 0.00183699, 0.00191692, 0.00199513, 0.00207987, 0.00217708, 0.00229044, 0.00242538, 0.00258815, 0.0027823, 0.00300876, 0.00326654, 0.00354878, 0.00383838, 0.00411092, 0.00434386, 0.00452467, 0.00465367, 0.00474321, 0.00481454, 0.00489111, 0.00498855, 0.00510667, 0.00523012, 0.00533674, 0.00540769, 0.00543522, 0.00542719, 0.00540643, 0.00540309, 0.00544236, 0.00553456, 0.00567239, 0.00583431, 0.00599128, 0.00611633, 0.0061946, 0.00622815, 0.00623227, 0.00622729, 0.00623243, 0.00626277, 0.00632561, 0.00641647, 0.00652047, 0.00662063, 0.00670567, 0.00677079, 0.00681374, 0.00683314, 0.00683006, 0.00680879, 0.00677432};
    @NonNull
    public static double[] sample10 = new double[]{0.00242287, 0.00276573, 0.00310575, 0.00341126, 0.00364728, 0.00378869, 0.00383164, 0.00379755, 0.00372673, 0.00366379, 0.00364127, 0.00366854, 0.00373087, 0.00379864, 0.00384305, 0.00385076, 0.00383051, 0.00380798, 0.00381205, 0.00385968, 0.0039472, 0.00405167, 0.00414141, 0.004191, 0.004194, 0.00416691, 0.00414204, 0.0041521, 0.0042143, 0.00432133, 0.00444414, 0.00454513, 0.00459583, 0.00459059, 0.0045499, 0.00451172, 0.00451464, 0.00458065, 0.00470552, 0.00486145, 0.00501068, 0.0051229, 0.00518837, 0.00522048, 0.00524761, 0.0052981, 0.00538515, 0.00549884, 0.00560959, 0.00568222, 0.00569345, 0.00564378, 0.00555783, 0.00547363, 0.00542601, 0.00543196, 0.00548395, 0.00555372, 0.00560506, 0.00560957, 0.00555813, 0.00546302, 0.0053501, 0.00524585, 0.00516523, 0.00510628, 0.00505328, 0.00498659, 0.00489394, 0.0047772, 0.0046514, 0.00453697, 0.00444937, 0.00439153, 0.00435261, 0.00431324, 0.00425481, 0.00416808, 0.00405686, 0.00393517, 0.0038196, 0.00372102, 0.00364005, 0.00356819, 0.00349394, 0.00341021, 0.00331901, 0.00323088, 0.00315931, 0.00311319, 0.00309132, 0.00308173, 0.00306649, 0.00302961, 0.00296465, 0.0028782, 0.00278736, 0.00271185, 0.00266429, 0.00264389, 0.00263748, 0.00262706, 0.00259908, 0.00255042, 0.00248911, 0.00243024, 0.00238926, 0.00237522, 0.0023868, 0.00241342, 0.00244138, 0.00246132, 0.00247291, 0.00248469, 0.00251045, 0.00256447, 0.00265779, 0.00279684, 0.00298506, 0.00322618, 0.00352551, 0.00388689, 0.00430612, 0.00476528, 0.00523167, 0.00566305, 0.00601808, 0.00626861, 0.00640938, 0.00646073, 0.00646203, 0.00645767, 0.00648053, 0.00653994, 0.00661972, 0.00668711, 0.00670841, 0.00666398, 0.00655677, 0.00641063, 0.00626049, 0.00613861, 0.00606332, 0.0060351, 0.00604108, 0.00606491, 0.00609644, 0.00613635, 0.00619398, 0.00627979, 0.0063965, 0.00653353, 0.00666848, 0.0067757, 0.00683791, 0.00685462, 0.00684296, 0.00683039, 0.00684305, 0.00689491, 0.00698225, 0.00708548, 0.0071775, 0.00723541, 0.00724993, 0.00722834, 0.00718959, 0.0071545, 0.00713606, 0.00713433, 0.0071381, 0.00713159, 0.00710309, 0.00705095, 0.0069842, 0.00691761, 0.00686396, 0.0068274, 0.00680144, 0.00677237, 0.00672634, 0.00665631, 0.00656539, 0.0064649, 0.00636829, 0.00628448, 0.00621413, 0.0061501, 0.00608152, 0.00599935, 0.00590129, 0.00579415, 0.00569202, 0.00560961, 0.00555383, 0.00551899, 0.00548931, 0.00544657, 0.00537758, 0.00527775, 0.00515108, 0.00500791, 0.00486071, 0.00471837, 0.00458271, 0.00445004, 0.00431681, 0.00418374, 0.00405555, 0.00393829, 0.00383807, 0.00375963, 0.00370232, 0.00365628, 0.00360493, 0.0035342, 0.00344037, 0.00333035, 0.00321635, 0.00311056, 0.00302165, 0.00295153, 0.00289328, 0.00283464, 0.00276654, 0.0026891, 0.00261019, 0.00253957, 0.00248473, 0.002449, 0.00242881, 0.00241189, 0.00238153, 0.00232582, 0.0022442, 0.00214654, 0.00204731, 0.00196008, 0.0018937, 0.00184979, 0.00182282, 0.00180449, 0.00178874, 0.00177319, 0.00175815, 0.00174723, 0.00174742, 0.00176366, 0.00179094, 0.00181437, 0.00181904, 0.00179895, 0.00175759, 0.00170382, 0.00165, 0.0016119, 0.00160374, 0.00162928, 0.00167983, 0.00174148, 0.00180118, 0.00184732, 0.00187187, 0.00187726, 0.00188072, 0.00190781, 0.00197894, 0.00210188, 0.00227435, 0.00248725, 0.00272562, 0.00297338, 0.00322166, 0.00347159, 0.00372765, 0.00398882, 0.00424636, 0.00448825, 0.00470342, 0.00488279, 0.00502042, 0.0051167, 0.00518089, 0.00522865, 0.00527531, 0.00532938, 0.00539027, 0.00545011, 0.0054981, 0.00552619, 0.0055344, 0.00553292, 0.00553892, 0.00556969, 0.00563566, 0.00573647, 0.00586095, 0.00599091, 0.00610774, 0.00619874, 0.00626096, 0.00630088, 0.0063311, 0.00636522, 0.00641244, 0.0064739, 0.0065429, 0.00660875, 0.00666137, 0.00669405, 0.00670411, 0.00669298, 0.00666607, 0.00663162};
    @NonNull
    public static double[] sample9 = new double[]{0.00237581, 0.00278292, 0.00312396, 0.0033733, 0.00352816, 0.00360595, 0.00363527, 0.00364483, 0.00365495, 0.00367405, 0.00370061, 0.003728, 0.00375019, 0.00376531, 0.00377629, 0.00378853, 0.00380663, 0.00383241, 0.00386539, 0.00390506, 0.00395272, 0.00401094, 0.00408084, 0.00415918, 0.00423747, 0.00430378, 0.00434651, 0.00435868, 0.00434188, 0.00430798, 0.00427687, 0.00426994, 0.00430168, 0.00437401, 0.00447624, 0.00458945, 0.00469309, 0.00477172, 0.00482069, 0.00484839, 0.00487286, 0.00491344, 0.00498217, 0.00507974, 0.00519788, 0.00532446, 0.00544766, 0.00555827, 0.00565065, 0.00572234, 0.00577229, 0.00579874, 0.00579863, 0.00576948, 0.00571244, 0.00563437, 0.00554737, 0.00546588, 0.00540256, 0.00536436, 0.00535047, 0.00535306, 0.00536011, 0.00535903, 0.00533955, 0.00529518, 0.00522338, 0.00512478, 0.00500228, 0.00486055, 0.00470626, 0.00454825, 0.00439685, 0.00426199, 0.00415066, 0.00406472, 0.00400037, 0.00394983, 0.00390443, 0.00385738, 0.00380509, 0.00374727, 0.00368649, 0.0036267, 0.00357029, 0.00351525, 0.00345555, 0.00338569, 0.00330563, 0.00322179, 0.00314338, 0.00307787, 0.00302877, 0.00299541, 0.00297267, 0.00295169, 0.00292322, 0.00288233, 0.00283036, 0.0027726, 0.00271432, 0.00265865, 0.00260694, 0.00256, 0.00251909, 0.00248716, 0.00246915, 0.00246936, 0.0024868, 0.00251277, 0.00253385, 0.00253846, 0.00252277, 0.0024937, 0.00246906, 0.00247517, 0.00254139, 0.00269134, 0.00293376, 0.0032588, 0.00364212, 0.00405403, 0.00446837, 0.00486786, 0.0052444, 0.00559486, 0.00591473, 0.00619339, 0.00641456, 0.00656223, 0.00662958, 0.0066256, 0.00657544, 0.00651336, 0.00647071, 0.00646422, 0.00648971, 0.00652436, 0.00653753, 0.00650515, 0.00642182, 0.00630469, 0.00618736, 0.00610658, 0.00608742, 0.00613354, 0.00622653, 0.00633486, 0.00642805, 0.00648931, 0.00652079, 0.00653961, 0.00656765, 0.00662032, 0.00669957, 0.00679356, 0.00688329, 0.00695316, 0.00699986, 0.00703419, 0.00707442, 0.00713488, 0.00721665, 0.00730553, 0.00737813, 0.00741255, 0.00739889, 0.00734483, 0.00727329, 0.00721274, 0.00718436, 0.00719193, 0.00721974, 0.00723959, 0.00722365, 0.00715716, 0.00704516, 0.00691004, 0.00678129, 0.00668223, 0.00662014, 0.00658394, 0.00655057, 0.00649659, 0.00640962, 0.00629405, 0.00616848, 0.00605621, 0.0059739, 0.00592365, 0.00589224, 0.00585757, 0.0057992, 0.00570756, 0.00558722, 0.00545333, 0.00532368, 0.00521063, 0.00511631, 0.00503302, 0.00494856, 0.00485424, 0.00475091, 0.00464868, 0.00456082, 0.00449533, 0.00444898, 0.00440681, 0.00434753, 0.00425306, 0.00411797, 0.00395334, 0.0037825, 0.00363115, 0.00351718, 0.00344415, 0.00339958, 0.0033591, 0.00329711, 0.00319953, 0.00307082, 0.00293065, 0.00280339, 0.00270765, 0.00265037, 0.00262487, 0.00261258, 0.00259094, 0.00254489, 0.00247369, 0.00238836, 0.00230356, 0.00223175, 0.0021815, 0.00215483, 0.00214261, 0.00212603, 0.00208756, 0.00202254, 0.00194162, 0.00186317, 0.00180249, 0.00176561, 0.00174949, 0.00174518, 0.00174158, 0.00172939, 0.00170452, 0.00166907, 0.00162975, 0.00159496, 0.00157181, 0.00156389, 0.00157038, 0.00158691, 0.00160736, 0.00162604, 0.00163969, 0.00164885, 0.00165758, 0.00167203, 0.00169916, 0.00174563, 0.00181571, 0.00190887, 0.00202045, 0.00214626, 0.00228639, 0.0024446, 0.00262507, 0.00283082, 0.00306363, 0.00332206, 0.00359761, 0.00387391, 0.00413146, 0.00435498, 0.00453807, 0.00468351, 0.00480069, 0.00490171, 0.00499686, 0.00509089, 0.00518197, 0.00526459, 0.0053341, 0.00538982, 0.00543555, 0.00547818, 0.00552475, 0.00557868, 0.00563756, 0.00569528, 0.00574772, 0.00579719, 0.00585176, 0.00592078, 0.00601038, 0.00612087, 0.00624483, 0.00636667, 0.00646623, 0.0065268, 0.00654363, 0.0065274, 0.00650065, 0.00648932, 0.00651311, 0.00657797, 0.00667325, 0.00677533, 0.00685673, 0.0068968, 0.00688897};

    @NonNull
    public static ArrayList<double[]> samples = new ArrayList<>();

    public static double[] getRandomSample() {
        samples.add(sample1);
        samples.add(sample2);
        samples.add(sample3);
        samples.add(sample4);
        samples.add(sample5);
        samples.add(sample6);
        samples.add(sample7);
        samples.add(sample8);
        samples.add(sample9);
        samples.add(sample10);
        return samples.get(new Random().nextInt(samples.size()));
    }


    @NonNull
    public static double WVL[] =
            {2601.454642, 2593.140844, 2584.880015, 2576.671651, 2568.515254, 2560.410320, 2552.356387,
                    2544.352963, 2536.399575, 2528.495755, 2520.641042, 2512.834966, 2505.077101, 2497.366991, 2489.704184,
                    2482.088269, 2474.518816, 2466.995369, 2459.517542, 2452.084912, 2444.697068, 2437.353597, 2430.054123,
                    2422.798250, 2415.585556, 2408.415691, 2401.288262, 2394.202884, 2387.159207, 2380.156852, 2373.195448,
                    2366.274666, 2359.394122, 2352.553466, 2345.752371, 2338.990487, 2332.267474, 2325.582989, 2318.936720,
                    2312.328342, 2305.757502, 2299.223910, 2292.727240, 2286.267171, 2279.843414, 2273.455653, 2267.103587,
                    2260.786918, 2254.505351, 2248.258593, 2242.046347, 2235.868347, 2229.724300, 2223.613918, 2217.536953,
                    2211.493104, 2205.482102, 2199.503696, 2193.557615, 2187.643586, 2181.761371, 2175.910712, 2170.091330,
                    2164.303001, 2158.545468, 2152.818487, 2147.121806, 2141.455203, 2135.818431, 2130.211256, 2124.633445,
                    2119.084767, 2113.564988, 2108.073898, 2102.611266, 2097.176863, 2091.770487, 2086.391923, 2081.040931,
                    2075.717324, 2070.420885, 2065.151406, 2059.908674, 2054.692502, 2049.502688, 2044.339009, 2039.201293,
                    2034.089335, 2029.002935, 2023.941918, 2018.906085, 2013.895242, 2008.909226, 2003.947831, 1999.010874,
                    1994.098190, 1989.209593, 1984.344907, 1979.503949, 1974.686567, 1969.892569, 1965.121785, 1960.374060,
                    1955.649221, 1950.947095, 1946.267533, 1941.610367, 1936.975436, 1932.362580, 1927.771643, 1923.202469,
                    1918.654896, 1914.128785, 1909.623979, 1905.140319, 1900.677679, 1896.235889, 1891.814805, 1887.414296,
                    1883.034210, 1878.674401, 1874.334740, 1870.015088, 1865.715288, 1861.435222, 1857.174749, 1852.933734,
                    1848.712038, 1844.509542, 1840.326109, 1836.161610, 1832.015915, 1827.888899, 1823.780429, 1819.690393,
                    1815.618660, 1811.565102, 1807.529610, 1803.512063, 1799.512324, 1795.530293, 1791.565845, 1787.618866,
                    1783.689234, 1779.776846, 1775.881590, 1772.003336, 1768.141989, 1764.297434, 1760.469556, 1756.658257,
                    1752.863426, 1749.084949, 1745.322738, 1741.576672, 1737.846646, 1734.132569, 1730.434334, 1726.751839,
                    1723.084978, 1719.433669, 1715.797797, 1712.177263, 1708.571981, 1704.981852, 1701.406772, 1697.846659,
                    1694.301414, 1690.770944, 1687.255156, 1683.753959, 1680.267263, 1676.794972, 1673.337007, 1669.893276,
                    1666.463685, 1663.048162, 1659.646607, 1656.258932, 1652.885065, 1649.524915, 1646.178394, 1642.845429,
                    1639.525938, 1636.219825, 1632.927023, 1629.647448, 1626.381020, 1623.127656, 1619.887286, 1616.659828,
                    1613.445205, 1610.243341, 1607.054160, 1603.877582, 1600.713542, 1597.561962, 1594.422762, 1591.295884,
                    1588.181242, 1585.078764, 1581.988388, 1578.910040, 1575.843648, 1572.789139, 1569.746453, 1566.715521,
                    1563.696263, 1560.688623, 1557.692531, 1554.707916, 1551.734721, 1548.772876, 1545.822311, 1542.882977,
                    1539.954795, 1537.037702, 1534.131644, 1531.236554, 1528.352370, 1525.479027, 1522.616476, 1519.764643,
                    1516.923470, 1514.092903, 1511.272881, 1508.463340, 1505.664229, 1502.875488, 1500.097058, 1497.328882,
                    1494.570903, 1491.823066, 1489.085311, 1486.357589, 1483.639843, 1480.932017, 1478.234057, 1475.545910,
                    1472.867518, 1470.198835, 1467.539806, 1464.890374, 1462.250495, 1459.620117, 1456.999178, 1454.387639,
                    1451.785444, 1449.192545, 1446.608887, 1444.034429, 1441.469118, 1438.912905, 1436.365743, 1433.827582,
                    1431.298372, 1428.778073, 1426.266634, 1423.764005, 1421.270150, 1418.785013, 1416.308548, 1413.840716,
                    1411.381470, 1408.930764, 1406.488551, 1404.054793, 1401.629446, 1399.212457, 1396.803794, 1394.403408,
                    1392.011255, 1389.627299, 1387.251495, 1384.883800, 1382.524174, 1380.172575, 1377.828959, 1375.493292,
                    1373.165531, 1370.845634, 1368.533560, 1366.229279, 1363.932740, 1361.643906, 1359.362745, 1357.089214,
                    1354.823272, 1352.564887, 1350.314019, 1348.070630, 1345.834683, 1343.606141, 1341.384967, 1339.171122,
                    1336.964575, 1334.765288, 1332.573225, 1330.388350, 1328.210627, 1326.040019, 1323.876498, 1321.720025,
                    1319.570562, 1317.428083, 1315.292552, 1313.163928, 1311.042185, 1308.927287, 1306.819202, 1304.717893,
                    1302.623334, 1300.535489, 1298.454327};

    @NonNull
    public static double[] xReading2 = {0.453856, 0.48638, 0.515386, 0.512092, 0.511858, 0.51509, 0.52126, 0.533063, 0.547652, 0.55939, 0.565285, 0.560255, 0.544956, 0.525367, 0.504998, 0.488293, 0.477475, 0.465308, 0.453869, 0.445901, 0.439535, 0.424901, 0.407311, 0.382986, 0.362688, 0.353081, 0.343812, 0.333232, 0.319887, 0.308825, 0.296241, 0.28251, 0.270122, 0.262792, 0.26179, 0.26178, 0.262453, 0.264242, 0.266378, 0.26612, 0.261483, 0.250123, 0.235884, 0.221679, 0.20941, 0.200623, 0.19238, 0.185803, 0.185348, 0.187068, 0.191315, 0.191818, 0.187924, 0.180744, 0.179482, 0.178911, 0.178551, 0.185584, 0.196648, 0.206382, 0.212519, 0.214879, 0.213442, 0.211827, 0.210314, 0.210461, 0.213725, 0.220057, 0.227901, 0.236584, 0.243928, 0.250455, 0.256837, 0.260524, 0.266303, 0.275933, 0.289562, 0.30526, 0.325176, 0.347671, 0.36934, 0.390634, 0.407165, 0.423488, 0.443977, 0.465838, 0.482515, 0.493216, 0.499932, 0.506609, 0.513908, 0.537686, 0.558693, 0.572234, 0.576345, 0.570771, 0.558237, 0.546546, 0.532034, 0.522689, 0.527045, 0.540605, 0.554692, 0.565189, 0.569199, 0.570024, 0.567733, 0.565181, 0.561615, 0.5597, 0.562527, 0.573234, 0.584426, 0.587676, 0.5818, 0.57748, 0.57266, 0.557262, 0.518961, 0.436875, 0.347351, 0.289274, 0.24941, 0.218735, 0.195024, 0.177129, 0.164145, 0.15563, 0.153366, 0.156211, 0.161078, 0.165671, 0.168182, 0.16785, 0.166451, 0.169739, 0.172426, 0.174019, 0.174005, 0.17264, 0.171276, 0.172929, 0.175656, 0.177013, 0.176381, 0.174368, 0.175165, 0.177561, 0.179666, 0.180541, 0.17987, 0.178129, 0.176916, 0.180824, 0.184784, 0.187602, 0.188366, 0.188738, 0.187248, 0.184721, 0.182722, 0.181431, 0.181391, 0.182097, 0.182522, 0.181578, 0.178619, 0.174039, 0.170949, 0.1678, 0.165721, 0.165346, 0.166581, 0.169019, 0.172534, 0.173204, 0.173113, 0.171315, 0.169815, 0.168147, 0.170146, 0.173791, 0.177433, 0.179221, 0.180339, 0.180133, 0.180339, 0.17887, 0.176995, 0.178817, 0.183486, 0.188687, 0.192518, 0.195324, 0.199963, 0.199966, 0.196538, 0.191114, 0.191765, 0.195545, 0.199858, 0.203419, 0.205156, 0.204956, 0.202662, 0.199109, 0.202654, 0.208162, 0.2136, 0.217423, 0.218434, 0.220398, 0.224971, 0.228103, 0.230033, 0.232577, 0.245871, 0.257958, 0.266468, 0.270272, 0.273846, 0.286662, 0.29772, 0.305677, 0.310394, 0.317413, 0.330448, 0.343063, 0.353572, 0.360322, 0.36402, 0.361685, 0.358197, 0.360235, 0.373979, 0.399436, 0.428022, 0.448235, 0.46057, 0.461037, 0.458272, 0.451048, 0.439637, 0.428294, 0.428758, 0.425962, 0.423976, 0.424273, 0.427403, 0.443057, 0.45741, 0.467479, 0.467234, 0.459252, 0.456297, 0.459587, 0.454191, 0.440928, 0.436268, 0.426062, 0.404585, 0.392593, 0.380157, 0.369911, 0.371629, 0.371416, 0.359975, 0.339763, 0.316265, 0.297213, 0.274161, 0.254316, 0.237814, 0.228907, 0.224531, 0.221114, 0.228527, 0.236279, 0.241118, 0.242623, 0.241144, 0.237086, 0.233325, 0.231677, 0.231401, 0.23261, 0.235762, 0.23834, 0.240485, 0.243573, 0.247128, 0.249575, 0.252216, 0.255588, 0.256978, 0.255837, 0.252204, 0.246876, 0.241251, 0.241833, 0.24276, 0.246762, 0.251937, 0.256613, 0.263539, 0.270346, 0.273087, 0.270977, 0.265021, 0.26272, 0.261182, 0.259415, 0.262336, 0.266763};
    @NonNull
    public static double[] xReading3 = {0.00224038, 0.0025984, 0.00293276, 0.0032202, 0.00344221, 0.00358841, 0.00365923, 0.00366669, 0.00363281, 0.00358518, 0.00355068, 0.00354857, 0.00358558, 0.00365455, 0.00373729, 0.00381106, 0.0038565, 0.00386468, 0.00384044, 0.00380091, 0.00376946, 0.00376736, 0.00380633, 0.00388463, 0.00398814, 0.00409576, 0.00418703, 0.00424877, 0.00427855, 0.00428409, 0.00427923, 0.00427865, 0.00429334, 0.00432844, 0.00438378, 0.00445636, 0.00454284, 0.00464087, 0.00474852, 0.00486291, 0.00497913, 0.00509049, 0.00519038, 0.0052745, 0.0053426, 0.00539842, 0.00544766, 0.00549483, 0.00554061, 0.00558121, 0.00561036, 0.0056232, 0.00562012, 0.0056082, 0.00559894, 0.00560289, 0.00562376, 0.00565484, 0.00567981, 0.0056777, 0.00563085, 0.00553271, 0.00539202, 0.00523079, 0.00507638, 0.00495097, 0.00486325, 0.00480614, 0.00476108, 0.00470667, 0.00462783, 0.00452216, 0.00440055, 0.00428183, 0.00418381, 0.00411445, 0.00406794, 0.00402728, 0.00397227, 0.00388915, 0.00377729, 0.00364986, 0.00352826, 0.00343272, 0.00337348, 0.00334633, 0.00333452, 0.00331604, 0.00327287, 0.0031982, 0.00309856, 0.00299024, 0.00289201, 0.00281747, 0.0027706, 0.00274632, 0.00273507, 0.0027284, 0.00272224, 0.00271674, 0.00271373, 0.00271366, 0.00271371, 0.00270742, 0.00268651, 0.00264462, 0.00258151, 0.00250478, 0.00242739, 0.00236212, 0.00231633, 0.0022911, 0.00228493, 0.00229918, 0.00234163, 0.00242635, 0.00257006, 0.0027859, 0.00307672, 0.00343087, 0.00382347, 0.00422353, 0.00460391, 0.00494967, 0.00526095, 0.00554914, 0.00582789, 0.00610318, 0.00636703, 0.00659807, 0.00676895, 0.00685756, 0.00685702, 0.00678017, 0.00665637, 0.00652209, 0.00640908, 0.00633496, 0.00630018, 0.00629194, 0.00629303, 0.0062911, 0.00628384, 0.00627829, 0.00628527, 0.00631238, 0.00635931, 0.00641782, 0.00647608, 0.00652513, 0.00656391, 0.0066002, 0.00664624, 0.0067109, 0.00679265, 0.00687765, 0.00694533, 0.00697841, 0.00697205, 0.00693725, 0.00689706, 0.00687748, 0.00689679, 0.0069575, 0.00704465, 0.00713185, 0.00719296, 0.00721337, 0.00719555, 0.00715656, 0.00711964, 0.0071035, 0.00711355, 0.00713857, 0.00715532, 0.00713995, 0.00708047, 0.00698312, 0.00686928, 0.00676523, 0.00669024, 0.00664859, 0.00662808, 0.00660556, 0.00655772, 0.00647234, 0.00635453, 0.00622444, 0.00610789, 0.00602436, 0.00597738, 0.00595184, 0.00591991, 0.00585367, 0.0057381, 0.00557777, 0.00539434, 0.00521724, 0.00507267, 0.00497468, 0.00492036, 0.00489122, 0.00486184, 0.00481212, 0.00473615, 0.00464278, 0.0045482, 0.00446602, 0.00439992, 0.0043419, 0.00427591, 0.00418534, 0.00406117, 0.00390707, 0.00373863, 0.00357696, 0.00343986, 0.00333467, 0.00325582, 0.00318811, 0.00311413, 0.00302234, 0.00291207, 0.00279327, 0.00268144, 0.00259012, 0.0025244, 0.00247821, 0.00243688, 0.002384, 0.00230932, 0.00221437, 0.00211267, 0.00202384, 0.001964, 0.00193821, 0.00193986, 0.00195488, 0.00196621, 0.00195822, 0.00192306, 0.00186707, 0.00181076, 0.00177758, 0.00177759, 0.00180201, 0.00183389, 0.00185924, 0.00186734, 0.00184643, 0.0017862, 0.00168753, 0.0015701, 0.00146829, 0.00141347, 0.00141532, 0.00146134, 0.00153179, 0.00160961, 0.00168175, 0.00174034, 0.00178644, 0.00183137, 0.0018921, 0.00198198, 0.00210321, 0.00224616, 0.00239518, 0.00253662, 0.00266533, 0.00278726, 0.00291757, 0.00307475, 0.00327304, 0.003516, 0.00379382, 0.00408558, 0.00436539, 0.00461034, 0.00480723, 0.00495576, 0.0050671, 0.00515859, 0.00524655, 0.00534022, 0.00543913, 0.0055347, 0.00561482, 0.0056695, 0.00569526, 0.00569688, 0.00568612, 0.00567799, 0.00568633, 0.00572028, 0.00578279, 0.00587099, 0.00597783, 0.00609412, 0.00621017, 0.00631709, 0.00640768, 0.00647708, 0.00652323, 0.00654736, 0.00655425, 0.00655189, 0.00655031, 0.00655924, 0.00658501, 0.00662772, 0.00668032, 0.00673049, 0.00676474};


    @NonNull
    public static double[] xReading = {
            2603.741008, 2599.807865, 2595.886586, 2591.977118, 2588.079408, 2584.193403, 2580.319050, 2576.456297,
            2572.605092, 2568.765383, 2564.937118, 2561.120248, 2557.314720, 2553.520484, 2549.737491, 2545.965690,
            2542.205032, 2538.455467, 2534.716946, 2530.989421, 2527.272843, 2523.567165, 2519.872337, 2516.188313,
            2512.515046, 2508.852487, 2505.200591, 2501.559312, 2497.928601, 2494.308415, 2490.698707, 2487.099431,
            2483.510543, 2479.931998, 2476.363750, 2472.805756, 2469.257972, 2465.720353, 2462.192856, 2458.675438,
            2455.168055, 2451.670664, 2448.183224, 2444.705691, 2441.238023, 2437.780179, 2434.332116, 2430.893794,
            2427.465171, 2424.046206, 2420.636858, 2417.237088, 2413.846853, 2410.466115, 2407.094834, 2403.732970,
            2400.380483, 2397.037335, 2393.703486, 2390.378898, 2387.063532, 2383.757350, 2380.460313, 2377.172384,
            2373.893526, 2370.623700, 2367.362870, 2364.110998, 2360.868047, 2357.633981, 2354.408764, 2351.192358,
            2347.984729, 2344.785840, 2341.595655, 2338.414139, 2335.241257, 2332.076973, 2328.921254, 2325.774063,
            2322.635366, 2319.505130, 2316.383319, 2313.269901, 2310.164841, 2307.068105, 2303.979660, 2300.899474,
            2297.827512, 2294.763742, 2291.708131, 2288.660647, 2285.621257, 2282.589929, 2279.566631, 2276.551331,
            2273.543998, 2270.544599, 2267.553105, 2264.569482, 2261.593701, 2258.625730, 2255.665539, 2252.713097,
            2249.768374, 2246.831340, 2243.901964, 2240.980217, 2238.066068, 2235.159489, 2232.260449, 2229.368920,
            2226.484872, 2223.608277, 2220.739105, 2217.877328, 2215.022917, 2212.175844, 2209.336080, 2206.503598,
            2203.678369, 2200.860366, 2198.049561, 2195.245926, 2192.449435, 2189.660059, 2186.877772, 2184.102546,
            2181.334355, 2178.573173, 2175.818971, 2173.071725, 2170.331408, 2167.597993, 2164.871455, 2162.151767,
            2159.438904, 2156.732840, 2154.033550, 2151.341008, 2148.655189, 2145.976068, 2143.303619, 2140.637819,
            2137.978641, 2135.326062, 2132.680057, 2130.040602, 2127.407672, 2124.781242, 2122.161290, 2119.547791,
            2116.940721, 2114.340057, 2111.745775, 2109.157851, 2106.576262, 2104.000986, 2101.431998, 2098.869276,
            2096.312797, 2093.762538, 2091.218477, 2088.680590, 2086.148856, 2083.623252, 2081.103756, 2078.590346,
            2076.082999, 2073.581694, 2071.086410, 2068.597123, 2066.113813, 2063.636458, 2061.165038, 2058.699529,
            2056.239912, 2053.786165, 2051.338267, 2048.896198, 2046.459936, 2044.029461, 2041.604752, 2039.185790,
            2036.772552, 2034.365019, 2031.963172, 2029.566989, 2027.176450, 2024.791537, 2022.412228, 2020.038505,
            2017.670347, 2015.307736, 2012.950651, 2010.599073, 2008.252983, 2005.912362, 2003.577190, 2001.247449,
            1998.923120, 1996.604184, 1994.290621, 1991.982415, 1989.679545, 1987.381993, 1985.089742, 1982.802772,
            1980.521066, 1978.244605, 1975.973371, 1973.707347, 1971.446514, 1969.190854, 1966.940350, 1964.694984,
            1962.454739, 1960.219597, 1957.989541, 1955.764553, 1953.544616, 1951.329712, 1949.119826, 1946.914939,
            1944.715035, 1942.520097, 1940.330109, 1938.145052, 1935.964912, 1933.789670, 1931.619311, 1929.453819,
            1927.293176, 1925.137367, 1922.986376, 1920.840186, 1918.698781, 1916.562145, 1914.430263, 1912.303118,
            1910.180695, 1908.062978, 1905.949952, 1903.841600, 1901.737908, 1899.638859, 1897.544439, 1895.454633,
            1893.369424, 1891.288798, 1889.212740, 1887.141235, 1885.074268, 1883.011823, 1880.953887, 1878.900444,
            1876.851479, 1874.806979, 1872.766927, 1870.731311, 1868.700115, 1866.673326, 1864.650928, 1862.632907,
            1860.619250, 1858.609942, 1856.604969, 1854.604317, 1852.607972, 1850.615921, 1848.628149, 1846.644642,
            1844.665387, 1842.690371, 1840.719579, 1838.752998, 1836.790615, 1834.832416, 1832.878388, 1830.928517,
            1828.982791, 1827.041196, 1825.103718, 1823.170346, 1821.241065, 1819.315863, 1817.394727, 1815.477644,
            1813.564601, 1811.655586, 1809.750585, 1807.849586, 1805.952577, 1804.059545, 1802.170478, 1800.285362,
            1798.404186, 1796.526938, 1794.653604, 1792.784173, 1790.918633, 1789.056971, 1787.199176, 1785.345235,
            1783.495136, 1781.648868, 1779.806418, 1777.967775, 1776.132927, 1774.301862, 1772.474569, 1770.651035,
            1768.831250, 1767.015202, 1765.202878, 1763.394269, 1761.589362, 1759.788146, 1757.990609, 1756.196741,
            1754.406530, 1752.619966, 1750.837036, 1749.057730, 1747.282037, 1745.509946, 1743.741445, 1741.976525,
            1740.215173, 1738.457380, 1736.703135, 1734.952426, 1733.205243, 1731.461576, 1729.721413, 1727.984745,
            1726.251561, 1724.521850, 1722.795602, 1721.072806, 1719.353453, 1717.637531, 1715.925031, 1714.215943,
            1712.510255, 1710.807959, 1709.109043, 1707.413498, 1705.721315, 1704.032482, 1702.346989, 1700.664828,
            1698.985988, 1697.310460, 1695.638233, 1693.969298, 1692.303644, 1690.641264, 1688.982146, 1687.326281,
            1685.673659, 1684.024272, 1682.378110, 1680.735162, 1679.095421, 1677.458876, 1675.825517, 1674.195337,
            1672.568325, 1670.944472, 1669.323769, 1667.706208, 1666.091778, 1664.480470, 1662.872277, 1661.267188,
            1659.665194, 1658.066287, 1656.470458, 1654.877698, 1653.287998, 1651.701350, 1650.117743, 1648.537171,
            1646.959623, 1645.385092, 1643.813569, 1642.245044, 1640.679510, 1639.116958, 1637.557380, 1636.000766,
            1634.447110, 1632.896401, 1631.348632, 1629.803794, 1628.261879, 1626.722879, 1625.186786, 1623.653591,
            1622.123286, 1620.595863, 1619.071314, 1617.549630, 1616.030804, 1614.514828, 1613.001693, 1611.491392,
            1609.983916, 1608.479258, 1606.977410, 1605.478364, 1603.982112, 1602.488646, 1600.997959, 1599.510043,
            1598.024890, 1596.542492, 1595.062842, 1593.585932, 1592.111754, 1590.640302, 1589.171566, 1587.705541,
            1586.242218, 1584.781590, 1583.323649, 1581.868388, 1580.415800, 1578.965877, 1577.518613, 1576.073998,
            1574.632028, 1573.192693, 1571.755988, 1570.321904, 1568.890434, 1567.461572, 1566.035311, 1564.611642,
            1563.190560, 1561.772057, 1560.356125, 1558.942759, 1557.531951, 1556.123695, 1554.717982, 1553.314807,
            1551.914163, 1550.516042, 1549.120438, 1547.727344, 1546.336753, 1544.948659, 1543.563055, 1542.179934,
            1540.799289, 1539.421115, 1538.045403, 1536.672149, 1535.301344, 1533.932982, 1532.567058, 1531.203564,
            1529.842495, 1528.483842, 1527.127601, 1525.773764, 1524.422326, 1523.073280, 1521.726619, 1520.382338,
            1519.040429, 1517.700887, 1516.363706, 1515.028879, 1513.696400, 1512.366262, 1511.038460, 1509.712988,
            1508.389839, 1507.069007, 1505.750487, 1504.434271, 1503.120355, 1501.808732, 1500.499395, 1499.192340,
            1497.887560, 1496.585049, 1495.284801, 1493.986811, 1492.691072, 1491.397579, 1490.106326, 1488.817307,
            1487.530515, 1486.245947, 1484.963595, 1483.683454, 1482.405518, 1481.129782, 1479.856239, 1478.584885,
            1477.315714, 1476.048719, 1474.783896, 1473.521238, 1472.260741, 1471.002399, 1469.746205, 1468.492156,
            1467.240244, 1465.990465, 1464.742814, 1463.497284, 1462.253871, 1461.012569, 1459.773373, 1458.536277,
            1457.301275, 1456.068364, 1454.837537, 1453.608789, 1452.382115, 1451.157510, 1449.934967, 1448.714483,
            1447.496052, 1446.279669, 1445.065329, 1443.853025, 1442.642755, 1441.434511, 1440.228290, 1439.024086,
            1437.821893, 1436.621708, 1435.423525, 1434.227339, 1433.033144, 1431.840937, 1430.650712, 1429.462464,
            1428.276188, 1427.091879, 1425.909533, 1424.729144, 1423.550708, 1422.374220, 1421.199675, 1420.027068,
            1418.856394, 1417.687649, 1416.520828, 1415.355926, 1414.192939, 1413.031861, 1411.872688, 1410.715415,
            1409.560038, 1408.406552, 1407.254952, 1406.105234, 1404.957393, 1403.811424, 1402.667324, 1401.525087,
            1400.384708, 1399.246184, 1398.109510, 1396.974680, 1395.841692, 1394.710540, 1393.581220, 1392.453727,
            1391.328057, 1390.204205, 1389.082168, 1387.961941, 1386.843518, 1385.726897, 1384.612073, 1383.499040,
            1382.387796, 1381.278336, 1380.170655, 1379.064749, 1377.960614, 1376.858245, 1375.757639, 1374.658791,
            1373.561697, 1372.466353, 1371.372754, 1370.280897, 1369.190777, 1368.102390, 1367.015732, 1365.930799,
            1364.847586, 1363.766091, 1362.686307, 1361.608233, 1360.531863, 1359.457193, 1358.384220, 1357.312939,
            1356.243346, 1355.175438, 1354.109210, 1353.044659, 1351.981780, 1350.920570, 1349.861025, 1348.803140,
            1347.746912, 1346.692337, 1345.639411, 1344.588130, 1343.538491, 1342.490489, 1341.444120, 1340.399382,
            1339.356270, 1338.314779, 1337.274908, 1336.236651, 1335.200005, 1334.164966, 1333.131531, 1332.099695,
            1331.069456, 1330.040809, 1329.013750, 1327.988276, 1326.964384, 1325.942070, 1324.921329, 1323.902159,
            1322.884555, 1321.868515, 1320.854034, 1319.841109, 1318.829737, 1317.819913, 1316.811635, 1315.804898,
            1314.799699, 1313.796035, 1312.793903, 1311.793298, 1310.794217, 1309.796656, 1308.800613, 1307.806084,
            1306.813065, 1305.821553, 1304.831544, 1303.843035, 1302.856023, 1301.870504, 1300.886475,
            1299.903932};

    @NonNull
    public static double[] yReading = {
            0.002538, 0.002698, 0.002847, 0.002981, 0.003102, 0.003207, 0.003298, 0.003376, 0.003441,
            0.003494, 0.003539, 0.003576, 0.003607, 0.003633, 0.003656, 0.003677, 0.003697, 0.003715, 0.003733,
            0.003749, 0.003765, 0.003778, 0.003790, 0.003800, 0.003808, 0.003814, 0.003818, 0.003821, 0.003824,
            0.003826, 0.003829, 0.003834, 0.003841, 0.003851, 0.003864, 0.003881, 0.003900, 0.003924, 0.003950,
            0.003980, 0.004012, 0.004045, 0.004081, 0.004118, 0.004156, 0.004195, 0.004236, 0.004279, 0.004323,
            0.004370, 0.004419, 0.004472, 0.004528, 0.004588, 0.004651, 0.004717, 0.004787, 0.004858, 0.004931,
            0.005004, 0.005078, 0.005151, 0.005222, 0.005292, 0.005359, 0.005425, 0.005488, 0.005549, 0.005609,
            0.005669, 0.005728, 0.005789, 0.005850, 0.005914, 0.005979, 0.006046, 0.006116, 0.006186, 0.006257,
            0.006328, 0.006399, 0.006467, 0.006533, 0.006596, 0.006656, 0.006713, 0.006766, 0.006816, 0.006865,
            0.006914, 0.006963, 0.007015, 0.007071, 0.007133, 0.007201, 0.007277, 0.007362, 0.007457, 0.007561,
            0.007675, 0.007797, 0.007927, 0.008064, 0.008207, 0.008353, 0.008501, 0.008650, 0.008799, 0.008945,
            0.009088, 0.009227, 0.009361, 0.009489, 0.009611, 0.009726, 0.009834, 0.009935, 0.010027, 0.010111,
            0.010186, 0.010252, 0.010309, 0.010355, 0.010390, 0.010414, 0.010428, 0.010430, 0.010421, 0.010401,
            0.010371, 0.010331, 0.010281, 0.010224, 0.010158, 0.010086, 0.010009, 0.009926, 0.009839, 0.009748,
            0.009654, 0.009558, 0.009459, 0.009359, 0.009257, 0.009153, 0.009048, 0.008942, 0.008835, 0.008727,
            0.008619, 0.008512, 0.008405, 0.008300, 0.008196, 0.008093, 0.007993, 0.007895, 0.007798, 0.007703,
            0.007608, 0.007514, 0.007419, 0.007323, 0.007224, 0.007123, 0.007019, 0.006910, 0.006798, 0.006681,
            0.006561, 0.006438, 0.006313, 0.006186, 0.006059, 0.005933, 0.005809, 0.005688, 0.005570, 0.005457,
            0.005348, 0.005244, 0.005145, 0.005050, 0.004959, 0.004871, 0.004786, 0.004703, 0.004621, 0.004540,
            0.004460, 0.004381, 0.004303, 0.004227, 0.004152, 0.004081, 0.004012, 0.003947, 0.003886, 0.003829,
            0.003776, 0.003727, 0.003680, 0.003636, 0.003592, 0.003548, 0.003503, 0.003455, 0.003403, 0.003348,
            0.003288, 0.003224, 0.003157, 0.003087, 0.003016, 0.002945, 0.002876, 0.002811, 0.002751, 0.002698,
            0.002652, 0.002615, 0.002587, 0.002566, 0.002553, 0.002546, 0.002543, 0.002542, 0.002541, 0.002539,
            0.002534, 0.002523, 0.002507, 0.002485, 0.002457, 0.002423, 0.002384, 0.002343, 0.002300, 0.002258,
            0.002218, 0.002182, 0.002152, 0.002127, 0.002109, 0.002096, 0.002089, 0.002086, 0.002086, 0.002087,
            0.002088, 0.002088, 0.002085, 0.002081, 0.002077, 0.002073, 0.002072, 0.002078, 0.002095, 0.002128,
            0.002180, 0.002258, 0.002365, 0.002505, 0.002682, 0.002897, 0.003151, 0.003443, 0.003771, 0.004131,
            0.004520, 0.004930, 0.005355, 0.005788, 0.006222, 0.006649, 0.007062, 0.007456, 0.007825, 0.008164,
            0.008470, 0.008742, 0.008979, 0.009182, 0.009350, 0.009487, 0.009594, 0.009676, 0.009734, 0.009771,
            0.009791, 0.009797, 0.009790, 0.009772, 0.009746, 0.009713, 0.009675, 0.009631, 0.009584, 0.009535,
            0.009484, 0.009432, 0.009381, 0.009330, 0.009281, 0.009234, 0.009189, 0.009147, 0.009107, 0.009070,
            0.009034, 0.008998, 0.008964, 0.008928, 0.008892, 0.008855, 0.008816, 0.008777, 0.008738, 0.008699,
            0.008663, 0.008632, 0.008608, 0.008592, 0.008586, 0.008593, 0.008613, 0.008647, 0.008695, 0.008756,
            0.008828, 0.008910, 0.008998, 0.009088, 0.009178, 0.009264, 0.009341, 0.009407, 0.009460, 0.009497,
            0.009517, 0.009522, 0.009511, 0.009488, 0.009453, 0.009412, 0.009368, 0.009324, 0.009284, 0.009252,
            0.009230, 0.009221, 0.009225, 0.009244, 0.009276, 0.009320, 0.009374, 0.009436, 0.009503, 0.009571,
            0.009638, 0.009701, 0.009758, 0.009807, 0.009848, 0.009880, 0.009904, 0.009919, 0.009928, 0.009931,
            0.009930, 0.009927, 0.009922, 0.009917, 0.009912, 0.009907, 0.009902, 0.009897, 0.009890, 0.009880,
            0.009866, 0.009847, 0.009822, 0.009789, 0.009749, 0.009701, 0.009646, 0.009584, 0.009515, 0.009442,
            0.009365, 0.009285, 0.009204, 0.009122, 0.009041, 0.008961, 0.008883, 0.008805, 0.008729, 0.008654,
            0.008579, 0.008503, 0.008427, 0.008349, 0.008270, 0.008189, 0.008106, 0.008021, 0.007935, 0.007847,
            0.007760, 0.007672, 0.007584, 0.007498, 0.007413, 0.007330, 0.007248, 0.007168, 0.007089, 0.007012,
            0.006935, 0.006859, 0.006784, 0.006708, 0.006633, 0.006558, 0.006484, 0.006409, 0.006335, 0.006261,
            0.006188, 0.006116, 0.006045, 0.005975, 0.005905, 0.005836, 0.005767, 0.005698, 0.005629, 0.005558,
            0.005486, 0.005413, 0.005337, 0.005261, 0.005182, 0.005103, 0.005023, 0.004942, 0.004862, 0.004782,
            0.004703, 0.004625, 0.004548, 0.004473, 0.004399, 0.004325, 0.004253, 0.004180, 0.004108, 0.004035,
            0.003961, 0.003886, 0.003811, 0.003735, 0.003659, 0.003584, 0.003510, 0.003438, 0.003369, 0.003304,
            0.003243, 0.003186, 0.003133, 0.003084, 0.003039, 0.002996, 0.002955, 0.002915, 0.002875, 0.002833,
            0.002789, 0.002742, 0.002692, 0.002639, 0.002584, 0.002526, 0.002468, 0.002410, 0.002354, 0.002301,
            0.002251, 0.002206, 0.002166, 0.002131, 0.002102, 0.002076, 0.002054, 0.002035, 0.002015, 0.001995,
            0.001972, 0.001946, 0.001914, 0.001877, 0.001834, 0.001786, 0.001732, 0.001675, 0.001616, 0.001557,
            0.001499, 0.001444, 0.001394, 0.001350, 0.001314, 0.001285, 0.001263, 0.001248, 0.001239, 0.001234,
            0.001233, 0.001231, 0.001229, 0.001223, 0.001213, 0.001197, 0.001175, 0.001148, 0.001115, 0.001079,
            0.001040, 0.001000, 0.000962, 0.000927, 0.000896, 0.000871, 0.000853, 0.000842, 0.000838, 0.000841,
            0.000850, 0.000864, 0.000881, 0.000900, 0.000920, 0.000938, 0.000954, 0.000966, 0.000974, 0.000977,
            0.000977, 0.000972, 0.000964, 0.000953, 0.000941, 0.000928, 0.000915, 0.000902, 0.000891, 0.000882,
            0.000875, 0.000870, 0.000868, 0.000867, 0.000869, 0.000872, 0.000876, 0.000881, 0.000885, 0.000890,
            0.000895, 0.000899, 0.000904, 0.000910, 0.000918, 0.000927, 0.000938, 0.000951, 0.000967, 0.000985,
            0.001006, 0.001030, 0.001056, 0.001085, 0.001116, 0.001150, 0.001188, 0.001228, 0.001273, 0.001322,
            0.001376, 0.001436, 0.001503, 0.001577, 0.001659, 0.001748, 0.001844, 0.001947, 0.002055, 0.002167,
            0.002282, 0.002398, 0.002513, 0.002626, 0.002734, 0.002837, 0.002933, 0.003020, 0.003099, 0.003169,
            0.003230, 0.003283, 0.003328, 0.003368, 0.003402, 0.003433, 0.003461, 0.003488, 0.003515, 0.003542,
            0.003570, 0.003598, 0.003628, 0.003657, 0.003686, 0.003714, 0.003741, 0.003765, 0.003787, 0.003805,
            0.003821, 0.003834, 0.003844, 0.003853, 0.003861, 0.003870, 0.003879, 0.003891, 0.003905, 0.003923,
            0.003945, 0.003970, 0.003999, 0.004031, 0.004066, 0.004103, 0.004141, 0.004179, 0.004216, 0.004252,
            0.004285, 0.004314, 0.004341, 0.004364, 0.004383, 0.004400, 0.004413, 0.004424, 0.004434, 0.004442,
            0.004450, 0.004458, 0.004466, 0.004474, 0.004483};
}
